{"version":3,"file":"dx-react-scheduler.es.js","sources":["../src/plugins/scheduler-core.tsx","../src/scheduler.tsx","../src/plugins/day-view.tsx","../src/plugins/week-view.tsx","../src/plugins/month-view.tsx","../src/plugins/toolbar.tsx","../src/plugins/date-navigator.tsx","../src/plugins/view-switcher.tsx","../src/plugins/appointments.tsx","../src/plugins/all-day-panel.tsx","../src/plugins/view-state.tsx","../src/plugins/editing-state.tsx","../src/plugins/appointment-tooltip.tsx","../src/plugins/appointment-form.tsx","../src/plugins/drag-drop-provider.tsx","../src/plugins/today-button.tsx","../src/plugins/edit-recurrence-menu.tsx","../src/plugins/integrated-editing.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { appointments, formatDateTimeGetter } from '@devexpress/dx-scheduler-core';\nimport { SchedulerProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass SchedulerCoreBase extends React.PureComponent<SchedulerProps> {\n  formatDateTimeGetter = memoize(locale => formatDateTimeGetter(locale));\n\n  render() {\n    const {\n      data,\n      rootComponent: Root,\n      locale,\n      height,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"SchedulerCore\"\n      >\n        <Getter name=\"appointments\" value={appointments(data)} />\n        <Getter name=\"formatDate\" value={formatDateTimeGetter(locale)} />\n        <Template name=\"root\">\n          <Root height={height}>\n            <TemplatePlaceholder name=\"schedulerRoot\" />\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Scheduler's functionality\n * (data visualization and processing) is implemented in several plugins\n * specified as child components.\n * */\nexport const SchedulerCore: React.ComponentType<SchedulerProps> = SchedulerCoreBase;\n","import * as React from 'react';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { SchedulerCore } from './plugins/scheduler-core';\nimport { SchedulerProps } from './types';\n\nconst SchedulerBase: React.SFC<SchedulerProps> = ({\n  data,\n  rootComponent,\n  children,\n  locale,\n  height,\n}) => (\n  <PluginHost>\n    <SchedulerCore\n      data={data}\n      rootComponent={rootComponent}\n      locale={locale}\n      height={height}\n    />\n    {children}\n  </PluginHost>\n);\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n};\n\n// tslint:disable: max-line-length\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Schedulerâ€™s functionality\n * (data visualization and processing) is implemented in several plugins specified as child components.\n * */\nexport const Scheduler: React.ComponentType<SchedulerProps> = SchedulerBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  viewCellsData as viewCellsDataCore,\n  getAppointmentStyle,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  verticalTimeTableRects,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { VerticalViewProps, ViewState } from '../types';\n\nconst TYPE = 'day';\nconst startViewDateBaseComputed = ({\n  viewCellsData,\n}) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({\n  viewCellsData,\n}) => endViewDateCore(viewCellsData);\nconst viewCellsDataBaseComputed = (startDayHour, endDayHour, cellDuration) => ({\n  currentDate, intervalCount,\n}) => {\n  return viewCellsDataCore(\n    currentDate, undefined,\n    intervalCount, [],\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass DayViewBase extends React.PureComponent<VerticalViewProps, ViewState> {\n  state: ViewState = {\n    rects: [],\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      changeVerticalScroll: () => undefined,\n    },\n  };\n\n  static defaultProps: Partial<VerticalViewProps> = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleCellComponent: 'TimeScaleCell',\n    timeScaleRowComponent: 'TimeScaleRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  viewCellsDataComputed = memoize((viewName, startDayHour, endDayHour, cellDuration) => getters =>\n    computed(\n      getters,\n      viewName,\n      viewCellsDataBaseComputed(startDayHour, endDayHour, cellDuration), getters.viewCellsData,\n    ));\n\n  cellDurationComputed = memoize((viewName, cellDuration) => getters =>\n    computed(getters, viewName!, () => cellDuration, getters.cellDuration));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  availableViews = memoize((viewName, displayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName, displayName));\n\n  currentView = memoize((viewName, viewDisplayName) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type: TYPE, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  updateRects = memoize((\n    appointments, startViewDate, endViewDate, viewCellsData, cellDuration, currentDate,\n  ) => (cellElementsMeta) => {\n    const rects = verticalTimeTableRects(\n      appointments, startViewDate, endViewDate, [],\n      viewCellsData, cellDuration, cellElementsMeta,\n    );\n\n    this.setState({ rects, timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleRowComponent: TimeScaleRow,\n      timeScaleCellComponent: TimeScaleCell,\n      dayScaleLayoutComponent: DayScale,\n      dayScaleCellComponent: DayScaleCell,\n      dayScaleRowComponent: DayScaleRow,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      timeTableCellComponent: TimeTableCell,\n      appointmentLayerComponent: AppointmentLayer,\n      cellDuration,\n      name: viewName,\n      intervalCount,\n      startDayHour,\n      endDayHour,\n      displayName,\n    } = this.props;\n    const { rects, timeTableElementsMeta, scrollingStrategy } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin\n        name=\"DayView\"\n      >\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViews(viewName, viewDisplayName)}\n        />\n        <Getter name=\"currentView\" computed={this.currentView(viewName, viewDisplayName)} />\n\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"cellDuration\" computed={this.cellDurationComputed(viewName, cellDuration)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(viewName, startDayHour, endDayHour, cellDuration)}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <Layout\n                  dayScaleComponent={DayScalePlaceholder}\n                  dayScaleEmptyCellComponent={DayScaleEmptyCellPlaceholder}\n                  timeTableComponent={TimeTablePlaceholder}\n                  timeScaleComponent={TimeScalePlaceholder}\n                  setScrollingStrategy={this.setScrollingStrategy}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScale\n                  cellComponent={DayScaleCell}\n                  rowComponent={DayScaleRow}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <TimeScale\n                  rowComponent={TimeScaleRow}\n                  cellComponent={TimeScaleCell}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({\n              appointments, startViewDate, formatDate,\n              endViewDate, currentView, currentDate,\n              viewCellsData,\n            }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const setRects = this.updateRects(\n                appointments, startViewDate, endViewDate, viewCellsData, cellDuration, currentDate,\n              );\n\n              return (\n                <>\n                  <TimeTableLayout\n                    cellsData={viewCellsData}\n                    rowComponent={timeTableRowComponent}\n                    cellComponent={CellPlaceholder}\n                    formatDate={formatDate}\n                    setCellElementsMeta={setRects}\n                  />\n                  <AppointmentLayer>\n                    {rects.map(({\n                      dataItem, type, fromPrev, toNext, ...geometry\n                    }, index) => (\n                        <AppointmentPlaceholder\n                          key={index.toString()}\n                          type={type}\n                          data={dataItem}\n                          fromPrev={fromPrev}\n                          toNext={toNext}\n                          style={getAppointmentStyle(geometry)}\n                        />\n                      ))}\n                  </AppointmentLayer>\n                </>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const DayView: React.ComponentType<VerticalViewProps> = DayViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  viewCellsData as viewCellsDataCore,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  getAppointmentStyle,\n  verticalTimeTableRects,\n  ScrollingStrategy,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { WeekViewProps, ViewState } from '../types';\n\nconst DAYS_IN_WEEK = 7;\nconst TYPE = 'week';\nconst endViewDateBaseComputed: ComputedFn = ({\n  viewCellsData,\n}) => endViewDateCore(viewCellsData);\nconst startViewDateBaseComputed: ComputedFn = ({\n  viewCellsData,\n}) => startViewDateCore(viewCellsData);\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ firstDayOfWeek, intervalCount, excludedDays, currentDate }) => {\n  return viewCellsDataCore(\n    currentDate, firstDayOfWeek,\n    intervalCount! * DAYS_IN_WEEK, excludedDays!,\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass WeekViewBase extends React.PureComponent<WeekViewProps, ViewState> {\n  state: ViewState = {\n    rects: [],\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      changeVerticalScroll: () => undefined,\n    },\n    timeTableElementsMeta: {},\n  };\n\n  static defaultProps: Partial<WeekViewProps> = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    firstDayOfWeek: 0,\n    excludedDays: [],\n    name: 'Week',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleCellComponent: 'TimeScaleCell',\n    timeScaleRowComponent: 'TimeScaleRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters => computed(\n    getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy,\n  ));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  excludedDaysComputed = memoize((viewName, excludedDays) => getters => computed(\n    getters, viewName!, () => excludedDays, getters.excludedDays,\n  ));\n\n  firstDayOfWeekComputed = memoize((viewName, firstDayOfWeek) => getters => computed(\n    getters, viewName!, () => firstDayOfWeek, getters.firstDayOfWeek,\n  ));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters => computed(\n    getters, viewName!, () => intervalCount, getters.intervalCount,\n  ));\n\n  viewCellsDataComputed = memoize((viewName, cellDuration, startDayHour, endDayHour) =>\n    getters => computed(\n      getters,\n      viewName,\n      viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour),\n      getters.viewCellsData,\n    ));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type: TYPE, displayName: viewDisplayName }\n    ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  updateRects = memoize((\n    appointments, startViewDate, endViewDate, excludedDays, viewCellsData, cellDuration,\n  ) => (cellElementsMeta) => {\n    const rects = verticalTimeTableRects(\n      appointments, startViewDate, endViewDate, excludedDays,\n      viewCellsData, cellDuration, cellElementsMeta,\n    );\n\n    this.setState({ rects, timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy: ScrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleRowComponent: TimeScaleRow,\n      timeScaleCellComponent: TimeScaleCell,\n      dayScaleLayoutComponent: DayScale,\n      dayScaleCellComponent: DayScaleCell,\n      dayScaleRowComponent: DayScaleRow,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      timeTableCellComponent: TimeTableCell,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      intervalCount,\n      firstDayOfWeek,\n      startDayHour,\n      endDayHour,\n      appointmentLayerComponent: AppointmentLayer,\n      displayName,\n    } = this.props;\n    const { rects, timeTableElementsMeta, scrollingStrategy } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter name=\"currentView\" computed={this.currentViewComputed(viewName, viewDisplayName)} />\n\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter\n          name=\"firstDayOfWeek\"\n          computed={this.firstDayOfWeekComputed(viewName, firstDayOfWeek)}\n        />\n        <Getter name=\"excludedDays\" computed={this.excludedDaysComputed(viewName, excludedDays)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(viewName, cellDuration, startDayHour, endDayHour)}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <Layout\n                  dayScaleComponent={DayScalePlaceholder}\n                  dayScaleEmptyCellComponent={DayScaleEmptyCellPlaceholder}\n                  timeTableComponent={TimeTablePlaceholder}\n                  timeScaleComponent={TimeScalePlaceholder}\n                  setScrollingStrategy={this.setScrollingStrategy}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScale\n                  cellComponent={DayScaleCell}\n                  rowComponent={DayScaleRow}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <TimeScale\n                  rowComponent={TimeScaleRow}\n                  cellComponent={TimeScaleCell}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({\n              formatDate,\n              currentView,\n              viewCellsData,\n              appointments, startViewDate, endViewDate,\n            }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const setRects = this.updateRects(\n                appointments, startViewDate, endViewDate, excludedDays, viewCellsData, cellDuration,\n              );\n\n              return (\n                <>\n                  <TimeTableLayout\n                    cellsData={viewCellsData}\n                    rowComponent={timeTableRowComponent}\n                    cellComponent={CellPlaceholder}\n                    formatDate={formatDate}\n                    setCellElementsMeta={setRects}\n                  />\n                  <AppointmentLayer>\n                    {rects.map(({\n                      dataItem, type, fromPrev, toNext, ...geometry\n                    }, index) => (\n                      <AppointmentPlaceholder\n                        key={index.toString()}\n                        type={type}\n                        data={dataItem}\n                        fromPrev={fromPrev}\n                        toNext={toNext}\n                        style={getAppointmentStyle(geometry)}\n                      />\n                    ))}\n                  </AppointmentLayer>\n                </>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const WeekView: React.ComponentType<WeekViewProps> = WeekViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  startViewDate as startViewDateCore,\n  monthCellsData,\n  getAppointmentStyle,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  horizontalTimeTableRects,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { MonthViewProps, ViewState } from '../types';\n\nconst TYPE = 'month';\nconst viewCellsDataBaseComputed = (firstDayOfWeek, intervalCount) => ({ currentDate }) => {\n  return monthCellsData(\n    currentDate, firstDayOfWeek,\n    intervalCount!, Date.now(),\n  );\n};\nconst startViewDateBaseComputed = ({ viewCellsData }) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({ viewCellsData }) => endViewDateCore(viewCellsData);\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\n\nclass MonthViewBase extends React.PureComponent<MonthViewProps, ViewState> {\n  state: ViewState = {\n    rects: [],\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      changeVerticalScroll: () => undefined,\n    },\n  };\n\n  static defaultProps: Partial<MonthViewProps> = {\n    intervalCount: 1,\n    firstDayOfWeek: 0,\n    name: 'Month',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  firstDayOfWeekComputed = memoize((viewName, firstDayOfWeek) => getters =>\n    computed(getters, viewName!, () => firstDayOfWeek, getters.firstDayOfWeek));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName!, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type: TYPE, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  viewCellsDataComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters,\n      viewName!,\n      viewCellsDataBaseComputed(getters.firstDayOfWeek, getters.intervalCount),\n      getters.viewCellsData,\n    );\n  }\n\n  updateRects = memoize((\n    appointments, startViewDate, endViewDate, viewCellsData,\n  ) => (cellElementsMeta) => {\n    const rects = horizontalTimeTableRects(\n      appointments, startViewDate, endViewDate,\n      viewCellsData, cellElementsMeta,\n    );\n\n    this.setState({ rects, timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      dayScaleLayoutComponent: DayScale,\n      dayScaleCellComponent: DayScaleCell,\n      dayScaleRowComponent: DayScaleRow,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      timeTableCellComponent: TimeTableCell,\n      appointmentLayerComponent: AppointmentLayer,\n      name: viewName,\n      firstDayOfWeek,\n      intervalCount,\n      displayName,\n    } = this.props;\n    const { rects, timeTableElementsMeta, scrollingStrategy } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin\n        name=\"MonthView\"\n      >\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter name=\"currentView\" computed={this.currentViewComputed(viewName, viewDisplayName)} />\n\n        <Getter\n          name=\"firstDayOfWeek\"\n          computed={this.firstDayOfWeekComputed(viewName, firstDayOfWeek)}\n        />\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"viewCellsData\" computed={this.viewCellsDataComputed} />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <Layout\n                  dayScaleComponent={DayScalePlaceholder}\n                  timeTableComponent={TimeTablePlaceholder}\n                  setScrollingStrategy={this.setScrollingStrategy}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScale\n                  cellComponent={DayScaleCell}\n                  rowComponent={DayScaleRow}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({\n              appointments, startViewDate, endViewDate, currentView, viewCellsData, formatDate,\n            }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const setRects = this.updateRects(\n                appointments, startViewDate, endViewDate, viewCellsData,\n              );\n              return (\n                <>\n                  <TimeTableLayout\n                    cellsData={viewCellsData}\n                    rowComponent={timeTableRowComponent}\n                    cellComponent={CellPlaceholder}\n                    formatDate={formatDate}\n                    setCellElementsMeta={setRects}\n                  />\n                  <AppointmentLayer>\n                    {rects.map(({\n                      dataItem, type, fromPrev, toNext, ...geometry\n                    }, index) => (\n                      <AppointmentPlaceholder\n                        key={index.toString()}\n                        type={type}\n                        data={dataItem}\n                        fromPrev={fromPrev}\n                        toNext={toNext}\n                        style={getAppointmentStyle(geometry)}\n                      />\n                    ))}\n                  </AppointmentLayer>\n                </>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\n * An appointment's size depends on its duration in days.\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\n * The time scale and all-day panel are not available in this view.\n * */\nexport const MonthView: React.ComponentType<MonthViewProps> = MonthViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ToolbarProps } from '../types';\n\nclass ToolbarBase extends React.PureComponent<ToolbarProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace',\n  };\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's toolbar. */\nexport const Toolbar: React.ComponentType<ToolbarProps> = ToolbarBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  monthCellsData,\n  viewBoundText,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { DateNavigatorProps, DateNavigatorState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst navigate = (action, currentView, intervalCount) => (direction, nextDate) => action({\n  direction,\n  nextDate,\n  amount: intervalCount,\n  step: currentView.type,\n});\n\nclass DateNavigatorBase extends React.PureComponent<DateNavigatorProps, DateNavigatorState> {\n  target!: React.ReactInstance;\n\n  state = {\n    visible: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton',\n  };\n\n  setRootRef = (target: React.ReactInstance) => {\n    this.target = target;\n  }\n\n  handleVisibilityToggle = () => {\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  }\n\n  handleHide = () => {\n    this.setState({ visible: false });\n  }\n\n  navigateAction = memoize((changeCurrentDate, currentView, intervalCount, navigateAction) =>\n    navigateAction(changeCurrentDate, currentView, intervalCount));\n\n  render() {\n    const {\n      rootComponent: Root,\n      overlayComponent: Overlay,\n      openButtonComponent: OpenButton,\n      navigationButtonComponent: NavigationButton,\n      calendarComponent: Calendar,\n      calendarRowComponent: CalendarRow,\n      calendarCellComponent: CalendarCell,\n      calendarHeaderRowComponent: CalendarHeaderRow,\n      calendarHeaderCellComponent: CalendarHeaderCell,\n      calendarTextComponent: CalendarText,\n      calendarNavigationButtonComponent: CalendarNavigationButton,\n      calendarNavigatorComponent: CalendarNavigator,\n    } = this.props;\n\n    const { visible } = this.state;\n    return (\n      <Plugin\n        name=\"DateNavigator\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              currentDate,\n              startViewDate,\n              endViewDate,\n              firstDayOfWeek,\n              currentView,\n              intervalCount,\n              formatDate,\n            }, {\n              changeCurrentDate,\n            }) => {\n              const navigateAction = this.navigateAction(\n                changeCurrentDate, currentView, intervalCount, navigate,\n              );\n              const calendarDateChanged = (nextDate) => {\n                navigateAction(undefined, nextDate);\n                this.handleHide();\n              };\n              const navigatorText = viewBoundText(\n                startViewDate,\n                endViewDate,\n                currentView,\n                currentDate,\n                intervalCount,\n                formatDate,\n              );\n              return (\n                <>\n                  <Root\n                    navigationButtonComponent={NavigationButton}\n                    openButtonComponent={OpenButton}\n                    navigatorText={navigatorText}\n                    rootRef={this.setRootRef}\n                    onVisibilityToggle={this.handleVisibilityToggle}\n                    onNavigate={navigateAction}\n                  />\n                  <Overlay\n                    visible={visible}\n                    target={this.target}\n                    onHide={this.handleHide}\n                  >\n                    <Calendar\n                      selectedDate={currentDate}\n                      firstDayOfWeek={firstDayOfWeek}\n                      getCells={monthCellsData}\n                      textComponent={CalendarText}\n                      navigationButtonComponent={CalendarNavigationButton}\n                      rowComponent={CalendarRow}\n                      cellComponent={CalendarCell}\n                      headerRowComponent={CalendarHeaderRow}\n                      headerCellComponent={CalendarHeaderCell}\n                      navigatorComponent={CalendarNavigator}\n                      onSelectedDateChange={calendarDateChanged}\n                      formatDate={formatDate}\n                    />\n                  </Overlay>\n                </>\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nexport const DateNavigator: React.ComponentType<DateNavigatorProps> = DateNavigatorBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ViewSwitcherProps } from '../types/view-switcher';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nclass ViewSwitcherBase extends React.PureComponent<ViewSwitcherProps> {\n  static components: PluginComponents = {\n    switcherComponent: 'Switcher',\n  };\n\n  render() {\n    const { switcherComponent: Switcher } = this.props;\n\n    return (\n      <Plugin\n        name=\"ViewSwitcher\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView,\n              availableViews,\n            }, {\n              setCurrentViewName,\n            }) => (\n              <Switcher\n                currentView={currentView}\n                availableViews={availableViews}\n                onChange={setCurrentViewName}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's view switcher. */\nexport const ViewSwitcher: React.ComponentType<ViewSwitcherProps> = ViewSwitcherBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { createClickHandlers } from '@devexpress/dx-core';\nimport { POSITION_START, POSITION_END } from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentsProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n];\n\nclass AppointmentsBase extends React.PureComponent<AppointmentsProps> {\n  static components: PluginComponents = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  render() {\n    const {\n      splitIndicatorComponent: SplitIndicator,\n      appointmentComponent: Appointment,\n      appointmentContentComponent: AppointmentContent,\n      containerComponent: Container,\n      recurringIconComponent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"Appointments\"\n        dependencies={pluginDependencies}\n      >\n        <Template\n          name=\"appointment\"\n        >\n          {({ style, ...params }: any) => (\n            <TemplateConnector>\n              {({ formatDate }) => (\n                <Container style={style}>\n                  <TemplatePlaceholder\n                    name=\"appointmentTop\"\n                    params={{ data: params.data, type: params.type, slice: params.fromPrev }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentContent\"\n                    params={{ ...params, formatDate }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentBottom\"\n                    params={{ data: params.data, type: params.type, slice: params.toNext }}\n                  />\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointmentContent\">\n          {({\n            onClick, onDoubleClick, formatDate,\n            data, type, fromPrev, toNext,\n            ...restParams\n          }: any) => (\n            <Appointment\n              data={data}\n              {...createClickHandlers(onClick, onDoubleClick)}\n              {...restParams}\n            >\n              {fromPrev && <SplitIndicator position={POSITION_START} appointmentType={type} />}\n              <AppointmentContent\n                data={data}\n                type={type}\n                recurringIconComponent={recurringIconComponent}\n                formatDate={formatDate}\n              />\n              {toNext && <SplitIndicator position={POSITION_END} appointmentType={type} />}\n            </Appointment>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders appointments. */\nexport const Appointments: React.ComponentType<AppointmentsProps> = AppointmentsBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  allDayCells,\n  getAppointmentStyle,\n  allDayRects,\n} from '@devexpress/dx-scheduler-core';\nimport moment from 'moment';\n\nimport { AllDayPanelProps, AllDayPanelState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n];\nconst defaultMessages = {\n  allDay: 'All Day',\n};\nconst MONTH = 'Month';\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\nconst AllDayPanelPlaceholder = params => <TemplatePlaceholder name=\"allDayPanel\" params={params} />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"allDayPanelCell\" params={params} />;\n\nclass AllDayPanelBase extends React.PureComponent<AllDayPanelProps, AllDayPanelState> {\n  state: AllDayPanelState = {\n    rects: [],\n    elementsMeta: {},\n  };\n  static defaultProps: Partial<AllDayPanelProps> = {\n    messages: {},\n  };\n  static components: PluginComponents = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container',\n  };\n\n  allDayCellsData = memoize(viewCellsData => allDayCells(viewCellsData));\n\n  updateRects = memoize((\n    appointments, startViewDate, excludedDays, endViewDate, viewCellsData,\n  ) => (cellElementsMeta) => {\n    const allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n    const allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n    const rects = allDayRects(\n      appointments, allDayLeftBound, allDayRightBound,\n      excludedDays, viewCellsData, cellElementsMeta,\n    );\n\n    this.setState({ rects, elementsMeta: cellElementsMeta });\n  });\n\n  getMessageFormatter = memoize((messages, allDayPanelDefaultMessages) =>\n    getMessagesFormatter({ ...allDayPanelDefaultMessages, ...messages }));\n\n  render() {\n    const {\n      appointmentLayerComponent: AppointmentLayer,\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent,\n      titleCellComponent: TitleCell,\n      containerComponent: Container,\n      messages,\n    } = this.props;\n    const { rects, elementsMeta } = this.state;\n    const getMessage = this.getMessageFormatter(messages, defaultMessages);\n\n    return (\n      <Plugin\n        name=\"AllDayPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"allDayElementsMeta\" value={elementsMeta} />\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView === MONTH) return null;\n              return (\n                <TitleCell getMessage={getMessage} />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView === MONTH) return null;\n              return (\n                <Container>\n                  <AllDayPanelPlaceholder />\n                </Container>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView, appointments, startViewDate, formatDate,\n              endViewDate, excludedDays, viewCellsData,\n            }) => {\n              if (currentView.name === MONTH) return null;\n              const setRects = this.updateRects(\n                appointments, startViewDate, excludedDays, endViewDate, viewCellsData,\n              );\n              return (\n                <>\n                  <Layout\n                    cellComponent={CellPlaceholder}\n                    rowComponent={rowComponent}\n                    cellsData={this.allDayCellsData(viewCellsData)}\n                    setCellElementsMeta={setRects}\n                    formatDate={formatDate}\n                  />\n                  <AppointmentLayer>\n                    {rects.map(({\n                      dataItem, type, fromPrev, toNext, ...geometry\n                    }, index) => (\n                      <AppointmentPlaceholder\n                        style={getAppointmentStyle(geometry)}\n                        type={type}\n                        key={index.toString()}\n                        data={dataItem}\n                        fromPrev={fromPrev}\n                        toNext={toNext}\n                      />\n                    ))}\n                  </AppointmentLayer>\n                </>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => <Cell {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the All Day Panel. */\nexport const AllDayPanel: React.ComponentType<AllDayPanelProps> = AllDayPanelBase;\n","import * as React from 'react';\nimport {\n  Getter,\n  Action,\n  Plugin,\n  createStateHelper,\n  StateHelper,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  changeCurrentDate,\n  setCurrentViewName,\n  ChangeCurrentDatePayload,\n} from '@devexpress/dx-scheduler-core';\nimport { ViewStateProps, ViewStateState } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass ViewStateBase extends React.PureComponent<ViewStateProps, ViewStateState> {\n  changeCurrentDate: ActionFn<ChangeCurrentDatePayload>;\n  setCurrentViewName: ActionFn<string>;\n\n  static defaultProps: Partial<ViewStateProps> = {\n    defaultCurrentDate: new Date(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        currentDate: () => {\n          const { onCurrentDateChange } = this.props;\n          return onCurrentDateChange;\n        },\n        currentViewName: () => {\n          const { onCurrentViewNameChange } = this.props;\n          return onCurrentViewNameChange;\n        },\n      },\n    );\n\n    this.changeCurrentDate = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentDate', changeCurrentDate);\n    this.setCurrentViewName = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentViewName', setCurrentViewName);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentDate = prevState.currentDate,\n      currentViewName = prevState.currentViewName,\n    } = nextProps;\n\n    return {\n      currentDate,\n      currentViewName,\n    };\n  }\n\n  getCurrentViewComputed =  memoize(currentViewName => () => (\n    currentViewName\n    ? { name: currentViewName }\n    : undefined\n  ));\n\n  render() {\n    const { currentDate, currentViewName: stateCurrentViewName } = this.state;\n    return (\n      <Plugin\n        name=\"ViewState\"\n      >\n        <Getter name=\"currentDate\" value={currentDate} />\n        <Getter name=\"currentView\" computed={this.getCurrentViewComputed(stateCurrentViewName)} />\n        <Action name=\"changeCurrentDate\" action={this.changeCurrentDate} />\n        <Action name=\"setCurrentViewName\" action={this.setCurrentViewName} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nexport const ViewState: React.ComponentType<ViewStateProps> = ViewStateBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, createStateHelper, StateHelper, ComputedFn, ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  addAppointment,\n  cancelAddedAppointment,\n  startEditAppointment,\n  stopEditAppointment,\n  changeAppointment,\n  cancelChanges,\n  changedAppointmentById,\n  RECURRENCE_EDIT_SCOPE,\n  preCommitChanges as preCommitChangesBase,\n} from '@devexpress/dx-scheduler-core';\nimport { EditingStateProps, EditingStateState } from '../types';\n\nclass EditingStateBase extends React.PureComponent<EditingStateProps, EditingStateState> {\n  startEditAppointment: ComputedFn;\n  stopEditAppointment: (payload?: any) => void;\n  changeAppointment: ComputedFn;\n  cancelChangedAppointment: (payload?: any) => void;\n  commitChangedAppointment: ActionFn<any>;\n  addAppointment: ComputedFn;\n  changeAddedAppointment: ComputedFn;\n  cancelAddedAppointment: (payload?: any) => void;\n  commitAddedAppointment: ComputedFn;\n  commitDeletedAppointment: ActionFn<any>;\n\n  static defaultProps: Partial<EditingStateProps> = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChangesBase,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        editingAppointment: () => {\n          const { onEditingAppointmentChange } = this.props;\n          return onEditingAppointmentChange;\n        },\n        addedAppointment: () => {\n          const { onAddedAppointmentChange } = this.props;\n          return onAddedAppointmentChange;\n        },\n        appointmentChanges: () => {\n          const { onAppointmentChangesChange } = this.props;\n          return onAppointmentChangesChange;\n        },\n      },\n    );\n\n    this.startEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', startEditAppointment);\n    this.stopEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', stopEditAppointment);\n\n    this.changeAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', changeAppointment);\n    this.cancelChangedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    this.commitChangedAppointment = (type = RECURRENCE_EDIT_SCOPE.CURRENT) => {\n      const { appointmentChanges, editingAppointment } = this.state;\n      const { onCommitChanges, preCommitChanges  } = this.props;\n\n      if (!editingAppointment) return;\n      const changes =  !editingAppointment.rRule\n        ? { changed: changedAppointmentById(appointmentChanges, editingAppointment.id!) }\n        : preCommitChanges!(appointmentChanges, editingAppointment, type);\n\n      onCommitChanges(changes);\n      this.cancelChangedAppointment();\n      this.stopEditAppointment();\n    };\n\n    this.addAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', addAppointment);\n    this.changeAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', changeAppointment);\n    this.cancelAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n    this.commitAddedAppointment = () => {\n      const { onCommitChanges } = this.props;\n      const { addedAppointment: stateAddedAppointment } = this.state;\n      onCommitChanges({\n        added: stateAddedAppointment,\n      });\n      this.cancelAddedAppointment();\n    };\n\n    this.commitDeletedAppointment = ({ deletedAppointmentData, type = 'current' }) => {\n      const { onCommitChanges, preCommitChanges } = this.props;\n\n      const changes = deletedAppointmentData.rRule\n        ? preCommitChanges!(null, deletedAppointmentData, type)\n        : { deleted: deletedAppointmentData.id };\n      onCommitChanges(changes);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingAppointment = prevState.editingAppointment,\n      appointmentChanges = prevState.appointmentChanges,\n      addedAppointment = prevState.addedAppointment,\n    } = nextProps;\n\n    return {\n      editingAppointment,\n      appointmentChanges,\n      addedAppointment,\n    };\n  }\n\n  render() {\n    const { addedAppointment, editingAppointment, appointmentChanges } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter name=\"editingAppointment\" value={editingAppointment} />\n        <Action name=\"startEditAppointment\" action={this.startEditAppointment} />\n        <Action name=\"stopEditAppointment\" action={this.stopEditAppointment} />\n\n        <Getter name=\"appointmentChanges\" value={appointmentChanges} />\n        <Action name=\"changeAppointment\" action={this.changeAppointment} />\n        <Action name=\"cancelChangedAppointment\" action={this.cancelChangedAppointment} />\n        <Action name=\"commitChangedAppointment\" action={this.commitChangedAppointment} />\n\n        <Getter name=\"addedAppointment\" value={addedAppointment} />\n        <Action name=\"addAppointment\" action={this.addAppointment} />\n        <Action name=\"changeAddedAppointment\" action={this.changeAddedAppointment} />\n        <Action name=\"cancelAddedAppointment\" action={this.cancelAddedAppointment} />\n        <Action name=\"commitAddedAppointment\" action={this.commitAddedAppointment} />\n\n        <Action name=\"commitDeletedAppointment\" action={this.commitDeletedAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the scheduler appointment editing state. */\nexport const EditingState: React.ComponentType<EditingStateProps> = EditingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  createStateHelper,\n  StateHelper,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  OPEN_COMMAND_BUTTON,\n  CLOSE_COMMAND_BUTTON,\n  DELETE_COMMAND_BUTTON,\n  setAppointmentMeta,\n  AppointmentMeta,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentTooltipProps, AppointmentTooltipState, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n  { name: 'EditingState', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n];\n\nconst commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON,\n};\n\nclass AppointmentTooltipBase extends React.PureComponent<\n  AppointmentTooltipProps, AppointmentTooltipState\n> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentMeta: (appointmentMeta: AppointmentMeta) => void;\n  onAppointmentClick: (appointmentMeta: AppointmentMeta) => void;\n\n  static defaultProps: Partial<AppointmentTooltipProps> = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false,\n  };\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentMeta: () => {\n          const { onAppointmentMetaChange } = this.props;\n          return onAppointmentMetaChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentMeta = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    this.onAppointmentClick = ({ target, data }) => {\n      this.setAppointmentMeta({ target, data });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentMeta = prevState.appointmentMeta,\n    } = nextProps;\n    return {\n      appointmentMeta,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      showOpenButton,\n      showDeleteButton,\n      showCloseButton,\n      layoutComponent: Layout,\n      headerComponent,\n      contentComponent,\n      commandButtonComponent,\n    } = this.props;\n    const { visible, appointmentMeta } = this.state;\n\n    return (\n      <Plugin\n        name=\"AppointmentTooltip\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              formatDate,\n            }, {\n              finishDeleteAppointment,\n            }) => {\n              const onDeleteButtonClick = () => {\n                finishDeleteAppointment(appointmentMeta.data);\n                this.toggleVisibility();\n              };\n              return (\n                <TemplatePlaceholder\n                  name=\"tooltip\"\n                  params={{\n                    commandButtonComponent,\n                    showOpenButton,\n                    showDeleteButton,\n                    showCloseButton,\n                    headerComponent,\n                    contentComponent,\n                    appointmentMeta,\n                    visible,\n                    onHide: this.toggleVisibility,\n                    commandButtonIds,\n                    ...finishDeleteAppointment && {\n                      onDeleteButtonClick,\n                    },\n                    formatDate,\n                  }}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: any) => <Layout {...params} />}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplatePlaceholder\n              params={{\n                ...params,\n                onClick: (\n                  { target, data },\n                ) => this.onAppointmentClick({ target, data }),\n              }}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nexport const AppointmentTooltip: React.ComponentType<AppointmentTooltipProps> = AppointmentTooltipBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  createStateHelper,\n  StateHelper,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  setAppointmentData,\n  isAllDayCell,\n  callActionIfExists,\n  COMMIT_COMMAND_BUTTON,\n  CANCEL_COMMAND_BUTTON,\n  AppointmentModel,\n} from '@devexpress/dx-scheduler-core';\n\nimport {\n  AppointmentFormProps, AppointmentFormState, AppointmentTooltip, Appointments,\n} from '../types';\n\nconst defaultMessages = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  startDateLabel: 'Start Date',\n  endDateLabel: 'End Date',\n  commitCommand: 'Save',\n  cancelCommand: 'Cancel',\n};\n\nconst pluginDependencies = [\n  { name: 'EditingState', optional: true },\n  { name: 'Appointments', optional: true },\n  { name: 'AppointmentTooltip', optional: true },\n];\n\nclass AppointmentFormBase extends React.PureComponent<AppointmentFormProps, AppointmentFormState> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentData: (payload: any) => void;\n  openFormHandler: (payload: AppointmentModel) => void;\n\n  static defaultProps: Partial<AppointmentFormProps> = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: () => undefined,\n    onAppointmentDataChange: () => undefined,\n  };\n  static components: PluginComponents = {\n    popupComponent: 'Popup',\n    containerComponent: 'Container',\n    startDateComponent: 'StartDateEditor',\n    endDateComponent: 'EndDateEditor',\n    titleComponent: 'TitleEditor',\n    allDayComponent: 'AllDayEditor',\n    commandButtonComponent: 'CommandButton',\n    scrollableAreaComponent: 'ScrollableArea',\n    staticAreaComponent: 'StaticArea',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentData: () => {\n          const { onAppointmentDataChange } = this.props;\n          return onAppointmentDataChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentData = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    this.openFormHandler = (appointmentData) => {\n      this.setAppointmentData({ appointmentData });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentData = prevState.appointmentData,\n    } = nextProps;\n    return {\n      appointmentData,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      allDayComponent: AllDayEditor,\n      containerComponent: Container,\n      scrollableAreaComponent: ScrollableArea,\n      staticAreaComponent: StaticArea,\n      popupComponent: Popup,\n      startDateComponent: StartDateEditor,\n      endDateComponent: EndDateEditor,\n      titleComponent: TitleEditor,\n      commandButtonComponent: CommandButton,\n      readOnly,\n      messages,\n    } = this.props;\n    const { visible, appointmentData } = this.state;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    return (\n      <Plugin\n        name=\"AppointmentForm\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              addedAppointment,\n              appointmentChanges,\n              editingAppointment,\n            }, {\n              stopEditAppointment,\n\n              changeAddedAppointment,\n              cancelAddedAppointment,\n              commitAddedAppointment,\n\n              changeAppointment,\n              cancelChangedAppointment,\n              finishCommitAppointment,\n            }) => {\n              const isNew = !editingAppointment;\n              const changedAppointment = {\n                ...appointmentData,\n                ...isNew ? addedAppointment : appointmentChanges,\n              };\n              const changeAppointmentField = isNew\n                ? changeAddedAppointment\n                : changeAppointment;\n\n              return (\n                <Popup\n                  visible={visible}\n                >\n                  <Container>\n                    <ScrollableArea>\n                      <TitleEditor\n                        readOnly={readOnly}\n                        label={getMessage('titleLabel')}\n                        value={changedAppointment.title}\n                        {...changeAppointment && {\n                          onValueChange: title => changeAppointmentField({ change: { title } }),\n                        }}\n                      />\n                      <StartDateEditor\n                        readOnly={readOnly}\n                        label={getMessage('startDateLabel')}\n                        value={changedAppointment.startDate}\n                        {...changeAppointment && {\n                          onValueChange:\n                            startDate => changeAppointmentField({ change: { startDate } }),\n                        }}\n                      />\n                      <EndDateEditor\n                        readOnly={readOnly}\n                        label={getMessage('endDateLabel')}\n                        value={changedAppointment.endDate}\n                        {...changeAppointment && {\n                          onValueChange: endDate => changeAppointmentField({ change: { endDate } }),\n                        }}\n                      />\n                      <AllDayEditor\n                        readOnly={readOnly}\n                        text={getMessage('allDayLabel')}\n                        value={changedAppointment.allDay}\n                        {...changeAppointment && {\n                          onValueChange: allDay => changeAppointmentField({ change: { allDay } }),\n                        }}\n                      />\n                    </ScrollableArea>\n                    <StaticArea>\n                      <CommandButton\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          this.toggleVisibility();\n                          if (stopEditAppointment) {\n                            if (isNew) {\n                              cancelAddedAppointment();\n                            } else {\n                              stopEditAppointment();\n                              cancelChangedAppointment();\n                            }\n                          }\n                        }}\n                        id={CANCEL_COMMAND_BUTTON}\n                      />\n                      {!readOnly && (\n                        <CommandButton\n                          text={getMessage('commitCommand')}\n                          onExecute={() => {\n                            this.toggleVisibility();\n                            if (finishCommitAppointment) {\n                              if (isNew) {\n                                commitAddedAppointment();\n                              } else {\n                                finishCommitAppointment();\n                              }\n                            }\n                          }}\n                          id={COMMIT_COMMAND_BUTTON}\n                        />\n                      )}\n                    </StaticArea>\n                  </Container>\n                </Popup>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: AppointmentTooltip.LayoutProps) => (\n            <TemplateConnector>\n              {(getters, {\n                startEditAppointment,\n              }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onOpenButtonClick: () => {\n                      this.openFormHandler(params.appointmentMeta!.data);\n                      callActionIfExists(startEditAppointment, params.appointmentMeta!.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplateConnector>\n              {(getters, {\n                startEditAppointment,\n              }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onDoubleClick: () => {\n                      this.openFormHandler(params.data);\n                      callActionIfExists(startEditAppointment, params.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"cell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {(getters, {\n                addAppointment,\n              }) => {\n                const newAppointmentData = {\n                  title: undefined,\n                  startDate: params.startDate,\n                  endDate: params.endDate,\n                  allDay: isAllDayCell(params.startDate, params.endDate),\n                };\n                return (\n                  <TemplatePlaceholder\n                    params={{\n                      ...params,\n                      onDoubleClick: () => {\n                        this.openFormHandler(newAppointmentData);\n                        callActionIfExists(addAppointment, { appointmentData: newAppointmentData });\n                      },\n                    }}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nexport const AppointmentForm: React.ComponentType<AppointmentFormProps> = AppointmentFormBase;\n","import * as React from 'react';\nimport moment from 'moment';\nimport {\n  Plugin, Template, TemplatePlaceholder,\n  TemplateConnector, DropTarget, DragSource,\n  DragDropProvider as DragDropProviderCore,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  cellIndex,\n  cellData,\n  cellType,\n  getAppointmentStyle,\n  intervalDuration,\n  autoScroll,\n  calculateAppointmentTimeBoundaries,\n  calculateInsidePart,\n  calculateDraftAppointments,\n  RESIZE_TOP,\n  RESIZE_BOTTOM,\n  POSITION_START,\n  POSITION_END,\n} from '@devexpress/dx-scheduler-core';\nimport { DragDropProviderProps, DragDropProviderState } from '../types';\n\nconst renderAppointmentItems = (items, formatDate, data, Wrapper, Appointment) => (\n  items.length > 0 ? (\n    <Wrapper>\n      {items.map(({\n        dataItem, type, fromPrev, toNext, ...geometry\n      }, index) => (\n        <Appointment\n          key={index.toString()}\n          data={data}\n          style={getAppointmentStyle(geometry)}\n          type={type}\n          fromPrev={fromPrev}\n          toNext={toNext}\n          formatDate={formatDate}\n        />\n      ))}\n    </Wrapper>\n  ) : (\n    null\n  )\n);\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Appointments' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'AllDayPanel', optional: true },\n];\n\nclass DragDropProviderBase extends React.PureComponent<\n  DragDropProviderProps, DragDropProviderState\n> {\n  timeTableDraftAppointments: any = [];\n  allDayDraftAppointments: any = [];\n  offsetTimeTop: number | null = null;\n  appointmentStartTime: any = null;\n  appointmentEndTime: any = null;\n\n  state: DragDropProviderState = {\n    startTime: null,\n    endTime: null,\n    payload: null,\n    isOutside: false,\n  };\n  static components: PluginComponents = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize',\n  };\n  static defaultProps: Partial<DragDropProviderProps> = {\n    allowDrag: () => true,\n    allowResize: () => true,\n  };\n\n  onPayloadChange(actions) {\n    return args => this.handlePayloadChange(args, actions);\n  }\n\n  calculateNextBoundaries(getters, actions) {\n    return args => this.calculateBoundaries(args, getters, actions);\n  }\n\n  resetCache() {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false,\n    });\n  }\n\n  applyChanges(startTime, endTime, payload, startEditAppointment, changeAppointment) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: {\n        startDate: startTime,\n        endDate: endTime,\n        ...payload.allDay && { allDay: undefined },\n      },\n    });\n    this.setState({ startTime, endTime, payload, isOutside: false });\n  }\n\n  handlePayloadChange({ payload }, { finishCommitAppointment }) {\n    const { isOutside } = this.state;\n    if (payload || !isOutside) return;\n\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  calculateBoundaries(\n    { payload, clientOffset },\n    {\n      viewCellsData, startViewDate, endViewDate, excludedDays,\n      timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n    },\n    { changeAppointment, startEditAppointment },\n  ) {\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy);\n    }\n\n    const tableCellElementsMeta = timeTableElementsMeta;\n\n    // AllDayPanel doesn't always exist\n    const allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects\n      ? allDayElementsMeta\n      : { getCellRects: [] };\n    const timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    const allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n\n    const targetData = cellData(timeTableIndex, allDayIndex, viewCellsData);\n    const targetType = cellType(targetData);\n    const insidePart = calculateInsidePart(\n      clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex,\n    );\n    const cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    const {\n      appointmentStartTime, appointmentEndTime, offsetTimeTop,\n    } = calculateAppointmentTimeBoundaries(\n      payload, targetData, targetType, cellDurationMinutes,\n      insidePart, this.offsetTimeTop!,\n    );\n\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.offsetTimeTop = offsetTimeTop!;\n\n    const { startTime, endTime } = this.state;\n    if (moment(startTime!).isSame(this.appointmentStartTime)\n      && moment(endTime!).isSame(this.appointmentEndTime)) return;\n\n    const draftAppointments = [{\n      dataItem: {\n        ...payload,\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime,\n      },\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime,\n    }];\n\n    const {\n      allDayDraftAppointments,\n      timeTableDraftAppointments,\n    } = calculateDraftAppointments(\n      allDayIndex, draftAppointments, startViewDate,\n      endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta,\n      targetType, cellDurationMinutes, tableCellElementsMeta,\n    );\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n\n    this.applyChanges(\n      this.appointmentStartTime, this.appointmentEndTime,\n      payload, startEditAppointment, changeAppointment,\n    );\n  }\n\n  handleDrop = ({ finishCommitAppointment }) => () => {\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  handleLeave = () => {\n    this.setState({ isOutside: true });\n  }\n\n  render() {\n    const { payload } = this.state;\n    const {\n      containerComponent: Container,\n      draftAppointmentComponent: DraftAppointment,\n      sourceAppointmentComponent: SourceAppointment,\n      resizeComponent: Resize,\n      allowDrag,\n      allowResize,\n    } = this.props;\n\n    const draftData = {\n      ...payload, startDate: this.appointmentStartTime, endDate: this.appointmentEndTime,\n    };\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({\n              viewCellsData, startViewDate, endViewDate, excludedDays,\n              timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n            }, {\n              changeAppointment, startEditAppointment, finishCommitAppointment,\n            }) => {\n              const calculateBoundariesByMove = this.calculateNextBoundaries({\n                viewCellsData,\n                startViewDate,\n                endViewDate,\n                excludedDays,\n                timeTableElementsMeta,\n                allDayElementsMeta,\n                scrollingStrategy,\n              }, { changeAppointment, startEditAppointment });\n              return (\n                <DragDropProviderCore\n                  onChange={this.onPayloadChange({ finishCommitAppointment })}\n                >\n                  <DropTarget\n                    onOver={calculateBoundariesByMove}\n                    onEnter={calculateBoundariesByMove}\n                    onDrop={this.handleDrop({ finishCommitAppointment })}\n                    onLeave={this.handleLeave}\n                  >\n                    <TemplatePlaceholder />\n                  </DropTarget>\n                </DragDropProviderCore>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template\n          name=\"appointmentContent\"\n          predicate={({ data }: any) => allowDrag!(data)}\n        >\n          {({ styles, ...params }: any) => (\n            <DragSource\n              payload={{ ...params.data, type: params.type }}\n            >\n              {payload && params.data.id === payload.id ? (\n                <SourceAppointment {...params} />\n              ) : (\n                <TemplatePlaceholder params={{ ...params, draggable: true }} />\n              )}\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentTop\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_TOP, appointmentType: type }}\n            >\n              <Resize position={POSITION_START} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentBottom\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_BOTTOM, appointmentType: type }}\n            >\n              <Resize position={POSITION_END} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ formatDate }) => renderAppointmentItems(\n              this.allDayDraftAppointments, formatDate, draftData, Container, DraftAppointment,\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ formatDate }) => renderAppointmentItems(\n              this.timeTableDraftAppointments, formatDate, draftData, Container, DraftAppointment,\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nexport const DragDropProvider: React.ComponentType<DragDropProviderProps> = DragDropProviderBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TodayButtonProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst defaultMessages = {\n  today: 'Today',\n};\n\nclass TodayButtonBase extends React.PureComponent<TodayButtonProps> {\n  static components: PluginComponents = {\n    buttonComponent: 'Button',\n  };\n  render() {\n    const {\n      buttonComponent: Button,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"TodayButton\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {(getters, {\n              changeCurrentDate,\n            }) => {\n              const setCurrentDate = nextDate => changeCurrentDate({\n                nextDate,\n              });\n              return (\n                <Button\n                  getMessage={getMessage}\n                  setCurrentDate={setCurrentDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nexport const TodayButton: React.ComponentType<TodayButtonProps> = TodayButtonBase;\n","import * as React from 'react';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, Action, Getters, Actions,\n} from '@devexpress/dx-react-core';\nimport { RECURRENCE_EDIT_SCOPE } from '@devexpress/dx-scheduler-core';\nimport { EditRecurrenceMenuProps, EditRecurrenceMenuState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nconst defaultAvailableOperations = [\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT },\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING },\n  { value: RECURRENCE_EDIT_SCOPE.ALL },\n];\n\nconst defaultMessages = {\n  [RECURRENCE_EDIT_SCOPE.CURRENT]: 'This appointment',\n  [RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING]: 'This and following appointments',\n  [RECURRENCE_EDIT_SCOPE.ALL]: 'All appointments',\n  menuEditTitle: 'Edit recurring appointment',\n  menuDeleteTitle: 'Delete recurring appointment',\n  cancelButton: 'Cancel',\n  commitButton: 'OK',\n};\n\nclass EditRecurrenceMenuBase extends React.PureComponent<\n  EditRecurrenceMenuProps, EditRecurrenceMenuState\n> {\n  static components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container',\n  };\n\n  modalContainer = React.createRef();\n\n  state = {\n    isOpen: false,\n    deletedAppointmentData: null,\n  };\n\n  finishCommitAppointment = (\n    payload,\n    { editingAppointment }: Getters,\n    { commitChangedAppointment }: Actions,\n  ) => {\n    if (editingAppointment && !editingAppointment.rRule) {\n      commitChangedAppointment();\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: null,\n      });\n    }\n  }\n\n  finishDeleteAppointment = (\n    payload,\n    getters,\n    { commitDeletedAppointment }: Actions,\n  ) => {\n    if (payload && !payload.rRule) {\n      commitDeletedAppointment({ deletedAppointmentData: payload });\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: payload,\n      });\n    }\n  }\n\n  commit = memoize((editAction, deleteAction, payload) => (type) => {\n    if (payload) {\n      deleteAction({ deletedAppointmentData: payload, type });\n    } else {\n      editAction(type);\n    }\n    this.closeMenu();\n  });\n\n  closeMenu = () => {\n    this.setState({ isOpen: false, deletedAppointmentData: null });\n  }\n\n  cancelEditing = memoize((cancelAction, stopEditAction) => () => {\n    stopEditAction();\n    cancelAction();\n    this.closeMenu();\n  });\n\n  availableOperations = memoize((getMessage, menuAvailableOperations) =>\n    menuAvailableOperations.map(({ value }) => ({\n      value,\n      title: getMessage([value]),\n    })));\n\n  getMessage = memoize((messages, menuMessages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const { isOpen, deletedAppointmentData } = this.state;\n    const {\n      layoutComponent: Layout,\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      buttonComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = this.getMessage(messages, defaultMessages);\n    const availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n\n    return (\n      <Plugin\n        name=\"EditRecurrenceMenu\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplatePlaceholder />\n          <Container ref={this.modalContainer} />\n          <TemplatePlaceholder name=\"overlay\" />\n        </Template>\n\n        <Template name=\"overlay\">\n          <TemplateConnector>\n            {(getters, {\n              commitChangedAppointment, commitDeletedAppointment,\n              cancelChangedAppointment, stopEditAppointment,\n            }) => {\n              const commit = this.commit(\n                commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData,\n              );\n              const cancelEditing = this.cancelEditing(\n                cancelChangedAppointment, stopEditAppointment,\n              );\n\n              return (\n                <Overlay\n                  target={this.modalContainer}\n                  visible={isOpen}\n                  onHide={this.closeMenu}\n                >\n                  <Layout\n                    isDeleting={!!deletedAppointmentData}\n                    buttonComponent={buttonComponent}\n                    handleClose={cancelEditing}\n                    commit={commit}\n                    availableOperations={availableOperations}\n                    getMessage={getMessage}\n                  />\n                </Overlay>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/**\n * A plugin that renders the Scheduler's edit menu.\n * Should not be used with the `IntegratedEditing` plugin.\n */\nexport const EditRecurrenceMenu: React.ComponentType<\n  EditRecurrenceMenuProps\n> = EditRecurrenceMenuBase;\n","import * as React from 'react';\nimport { Action, Plugin, Actions } from '@devexpress/dx-react-core';\nimport { IntegratedEditingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nclass IntegratedEditingBase extends React.PureComponent<IntegratedEditingProps> {\n  static defaultProps = {\n    totalCount: 0,\n  };\n\n  finishCommitAppointment = (payload, getters, { commitChangedAppointment }: Actions) => {\n    commitChangedAppointment();\n  }\n\n  finishDeleteAppointment = (payload, getters, { commitDeletedAppointment }: Actions) => {\n    commitDeletedAppointment({ deletedAppointmentData: payload });\n  }\n\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedEditing\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that allows implementing a editing calculation logic. */\nexport const IntegratedEditing: React.ComponentType<IntegratedEditingProps> = IntegratedEditingBase;\n"],"names":["React.createElement","React.PureComponent","startViewDateCore","endViewDateCore","viewCellsDataCore","availableViews","availableViewsCore","TYPE","endViewDateBaseComputed","startViewDateBaseComputed","viewCellsDataBaseComputed","CellPlaceholder","AppointmentPlaceholder","TimeTablePlaceholder","DayScalePlaceholder","DayScaleEmptyCellPlaceholder","TimeScalePlaceholder","pluginDependencies","preCommitChangesBase","defaultMessages","DragDropProviderCore","React.createRef"],"mappings":"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"}