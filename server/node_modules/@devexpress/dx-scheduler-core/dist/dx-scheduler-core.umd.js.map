{"version":3,"file":"dx-scheduler-core.umd.js","sources":["../src/constants.ts","../src/utils.ts","../src/plugins/common/computeds.ts","../src/plugins/common/helpers.ts","../src/plugins/week-view/helpers.ts","../src/plugins/week-view/computeds.ts","../src/plugins/vertical-rect/helpers.ts","../src/plugins/all-day-panel/helpers.ts","../src/plugins/month-view/helpers.ts","../src/plugins/horizontal-rect/helpers.ts","../src/plugins/month-view/computeds.ts","../src/plugins/all-day-panel/computeds.ts","../src/plugins/common/calculate-rects.ts","../src/plugins/scheduler-core/helpers.ts","../src/plugins/scheduler-core/computeds.ts","../src/plugins/view-state/reducers.ts","../src/plugins/date-navigator/helpers.ts","../src/plugins/appointment-tooltip/reducers.ts","../src/plugins/appointment-tooltip/constants.ts","../src/plugins/appointment-form/reducers.ts","../src/plugins/appointment-form/helpers.ts","../src/plugins/editing-state/reducers.ts","../src/plugins/editing-state/computeds.ts","../src/plugins/editing-state/helpers.ts","../src/plugins/drag-drop-provider/helpers.ts"],"sourcesContent":["export const VERTICAL_TYPE = 'vertical';\nexport const HORIZONTAL_TYPE = 'horizontal';\n\nexport const SCROLL_OFFSET = 50;\nexport const SCROLL_SPEED_PX = 30;\n\nexport const SECONDS = 'seconds';\nexport const MINUTES = 'minutes';\nexport const HOURS = 'hours';\n\nexport const RESIZE_TOP = 'resize-start';\nexport const RESIZE_BOTTOM = 'resize-end';\n\nexport const POSITION_START = 'start';\nexport const POSITION_END = 'end';\n\nexport const AUTO_HEIGHT = 'auto';\n\nexport const DAY_OPTIONS = { day: 'numeric' };\nexport const WEEK_DAY_OPTIONS = { weekday: 'short' };\nexport const SHORT_MONTH_OPTIONS = { month: 'short' };\nexport const HOUR_MINUTE_OPTIONS = { hour: 'numeric', minute: 'numeric' };\nexport const MONTH_YEAR_OPTIONS = { month: 'long', year: 'numeric' };\nexport const DAY_SHORT_MONTH_OPTIONS = { day: 'numeric', month: 'short' };\nexport const SHORT_MONTH_LONG_YEAR_OPTIONS = { month: 'short', year: 'numeric' };\nexport const SHORT_MONTH_SHORT_YEAR_OPTIONS = { month: 'short', year: '2-digit' };\nexport const DAY_LONG_MONTH_LONG_YEAR_OPTIONS = { day: 'numeric', month: 'long', year: 'numeric' };\nexport const DAY_SHORT_MONTH_LONG_YEAR_OPTIONS = {\n  day: 'numeric', month: 'short', year: 'numeric',\n};\nexport const DAY_SHORT_MONTH_SHORT_YEAR_OPTIONS = {\n  day: 'numeric', month: 'short', year: '2-digit',\n};\n\nexport const RECURRENCE_EDIT_SCOPE = {\n  ALL: 'all',\n  CURRENT_AND_FOLLOWING: 'currentAndFollowing',\n  CURRENT: 'current',\n};\n","import moment from 'moment';\nimport { CustomFunction, PureComputed } from '@devexpress/dx-core';\nimport { RRule, RRuleSet } from 'rrule';\nimport { HORIZONTAL_TYPE, VERTICAL_TYPE } from './constants';\nimport {\n  ComputedHelperFn, ViewPredicateFn,\n  CalculateFirstDateOfWeekFn, AppointmentMoment,\n  Interval, AppointmentGroup, AppointmentUnwrappedGroup,\n  Rect, ElementRect, RectCalculatorBaseFn, CalculateRectByDateIntervalsFn,\n} from './types';\n\nexport const computed: ComputedHelperFn = (getters, viewName, baseComputed, defaultValue) => {\n  if (getters.currentView.name !== viewName && !!defaultValue) {\n    return defaultValue;\n  }\n  return baseComputed(getters, viewName);\n};\n\nexport const toPercentage: PureComputed<\n  [number, number]\n> = (value, total) => (value * 100) / total;\n\nconst createExcludedInterval: CustomFunction<\n  [number, moment.Moment], Interval\n> = (day, start) => {\n  const leftBound = moment(start.day(day));\n  return [\n    leftBound,\n    moment(leftBound).hour(start.hour()).endOf('day'),\n  ];\n};\n\nconst excludedIntervals: PureComputed<\n  [number[], moment.Moment], Interval[]\n> = (excludedDays, start) => excludedDays\n  .map(day => (day === 0 ? 7 : day))\n  .sort((a, b) => a - b)\n  .reduce((acc, day, i, allDays) => {\n    if (i && day === allDays[i - 1] + 1) {\n      acc[i - 1][1].day(day);\n    } else {\n      acc.push(createExcludedInterval(day, start));\n    }\n    return acc;\n  }, [] as Interval[]);\n\nconst byDayPredicate: PureComputed<\n  [moment.Moment, moment.Moment], boolean\n> = (boundary, date) => (\n  boundary.isSameOrAfter(date, 'day')\n  && !boundary.isSame(boundary.clone().startOf('day'))\n);\n\nconst inInterval = (\n  date: moment.Moment, interval: Interval,\n) => date.isBetween(interval[0], interval[1], undefined, '[]');\n\nexport const viewPredicate: ViewPredicateFn = (\n  appointment, left, right,\n  excludedDays = [],\n  removeAllDayAppointments = false,\n) => {\n  const { start, end } = appointment;\n  const isAppointmentInBoundary = end.isAfter(left as Date)\n    && start.isBefore(right as Date);\n\n  const isAppointmentInExcludedDays = !!excludedIntervals(excludedDays, moment(left as Date))\n    .find(interval => (inInterval(start, interval) && inInterval(end, interval)));\n  const considerAllDayAppointment = removeAllDayAppointments\n    ? moment(end).diff(start, 'hours') < 24 && !appointment.allDay\n    : true;\n\n  return isAppointmentInBoundary && !isAppointmentInExcludedDays && considerAllDayAppointment;\n};\n\nexport const sortAppointments: PureComputed<\n  [AppointmentMoment[], boolean], AppointmentMoment[]\n> = (appointments, byDay = false) => appointments\n  .slice().sort((a, b) => {\n    const compareValue = byDay ? 'day' : undefined;\n    if (a.start.isBefore(b.start, compareValue)) return -1;\n    if (a.start.isAfter(b.start, compareValue)) return 1;\n    if (a.start.isSame(b.start, compareValue)) {\n      if (a.end.isBefore(b.end)) return 1;\n      if (a.end.isAfter(b.end)) return -1;\n    }\n    return 0;\n  });\n\nexport const findOverlappedAppointments: CustomFunction<\n  [AppointmentMoment[], boolean], any[]\n> = (sortedAppointments, byDay = false) => {\n  const appointments = sortedAppointments.slice();\n  const groups: AppointmentMoment[][] = [];\n  let totalIndex = 0;\n\n  while (totalIndex < appointments.length) {\n    groups.push([]);\n    const current = appointments[totalIndex];\n    const currentGroup = groups[groups.length - 1];\n    let next = appointments[totalIndex + 1];\n    let maxBoundary = current.end;\n\n    currentGroup.push(current);\n    totalIndex += 1;\n    while (next && (maxBoundary.isAfter(next.start)\n      || (byDay && byDayPredicate(maxBoundary, next.start)))) {\n      currentGroup.push(next);\n      if (maxBoundary.isBefore(next.end)) maxBoundary = next.end;\n      totalIndex += 1;\n      next = appointments[totalIndex];\n    }\n  }\n  return groups;\n};\n\nconst isMidnight: PureComputed<\n  [moment.Moment], boolean\n> = date => date.isSame(date.clone().startOf('day'));\n\nconst maxBoundaryPredicate: PureComputed<\n  [moment.Moment, Date], boolean\n> = (maxBoundary, startDate) => ((maxBoundary.isBefore(startDate as Date, 'day'))\n  || (isMidnight(maxBoundary) && maxBoundary.isSame(startDate as Date, 'day')));\n\nexport const adjustAppointments: CustomFunction<\n  [any[], boolean], any\n> = (groups, byDay = false) => groups.map((items) => {\n  let offset = 0;\n  let reduceValue = 1;\n  const appointments = items.slice();\n  const groupLength = appointments.length;\n  for (let startIndex = 0; startIndex < groupLength; startIndex += 1) {\n    const appointment = appointments[startIndex];\n    if (appointment.offset === undefined) {\n      let maxBoundary = appointment.end;\n      appointment.offset = offset;\n      for (let index = startIndex + 1; index < groupLength; index += 1) {\n        if (appointments[index].offset === undefined) {\n          if ((!byDay && maxBoundary.isSameOrBefore(appointments[index].start))\n            || (byDay && maxBoundaryPredicate(maxBoundary, appointments[index].start))) {\n            maxBoundary = appointments[index].end;\n            appointments[index].offset = offset;\n          }\n        }\n      }\n\n      offset += 1;\n      if (reduceValue < offset) reduceValue = offset;\n    }\n  }\n  return { items: appointments, reduceValue };\n});\n\nexport const calculateFirstDateOfWeek: CalculateFirstDateOfWeekFn = (\n  currentDate, firstDayOfWeek, excludedDays = [],\n) => {\n  const currentLocale = moment.locale();\n  moment.updateLocale('tmp-locale', {\n    week: { dow: firstDayOfWeek, doy: 1 }, // `doy` is required for TS using\n  });\n  const firstDateOfWeek = moment(currentDate as Date).startOf('week');\n  if (excludedDays.indexOf(firstDayOfWeek) !== -1) {\n    excludedDays.slice().sort().forEach((day) => {\n      if (day === firstDateOfWeek.day()) {\n        firstDateOfWeek.add(1, 'days');\n      }\n    });\n  }\n  moment.locale(currentLocale);\n\n  return firstDateOfWeek.toDate();\n};\n\nexport const unwrapGroups: PureComputed<\n  [AppointmentGroup[]], AppointmentUnwrappedGroup[]\n> = groups => groups.reduce((acc, { items, reduceValue }) => {\n  acc.push(...items.map(appointment => ({\n    start: appointment.start,\n    end: appointment.end,\n    dataItem: appointment.dataItem,\n    offset: appointment.offset,\n    reduceValue,\n    fromPrev: moment(appointment.start).diff(appointment.dataItem.startDate, 'minutes') > 1,\n    toNext: moment(appointment.dataItem.endDate).diff(appointment.end, 'minutes') > 1,\n  })));\n  return acc;\n}, [] as AppointmentUnwrappedGroup[]);\n\nexport const getAppointmentStyle: PureComputed<\n  [Rect], React.CSSProperties\n> = ({\n  top, left,\n  width, height,\n}) => ({\n  height,\n  width: `${width}%`,\n  transform: `translateY(${top}px)`,\n  msTransform: `translateY(${top}px)`,\n  left: `${left}%`,\n  position: 'absolute',\n});\n\nconst rectCalculatorBase: RectCalculatorBaseFn = (\n  appointment,\n  getRectByDates,\n  options,\n) => getRectByDates(appointment.start, appointment.end, options);\n\nconst horizontalRectCalculator: CustomFunction<\n  [AppointmentUnwrappedGroup, any], ElementRect\n> = (\n  appointment,\n  {\n    rectByDates,\n    multiline,\n    rectByDatesMeta: {\n      cellElementsMeta,\n      viewCellsData,\n    },\n  },\n) => {\n  const {\n    top, left,\n    width, height, parentWidth,\n  } = rectCalculatorBase(\n    appointment,\n    rectByDates,\n    {\n      multiline,\n      cellElementsMeta,\n      viewCellsData,\n    },\n  );\n\n  return {\n    top: top + ((height / appointment.reduceValue) * appointment.offset),\n    height: height / appointment.reduceValue,\n    left: toPercentage(left, parentWidth),\n    width: toPercentage(width, parentWidth),\n    dataItem: appointment.dataItem,\n    fromPrev: appointment.fromPrev,\n    toNext: appointment.toNext,\n    type: HORIZONTAL_TYPE,\n  };\n};\n\nconst verticalRectCalculator: CustomFunction<\n  [AppointmentUnwrappedGroup, any], ElementRect\n> = (\n  appointment,\n  {\n    rectByDates,\n    multiline,\n    rectByDatesMeta: {\n      viewCellsData,\n      cellDuration,\n      cellElementsMeta,\n      excludedDays,\n    },\n  },\n) => {\n  const {\n    top, left,\n    width, height, parentWidth,\n  } = rectCalculatorBase(\n    appointment,\n    rectByDates,\n    {\n      multiline,\n      viewCellsData,\n      cellDuration,\n      excludedDays,\n      cellElementsMeta,\n    },\n  );\n\n  const widthInPx = width / appointment.reduceValue;\n\n  return {\n    top,\n    height,\n    left: toPercentage(left + (widthInPx * appointment.offset), parentWidth),\n    width: toPercentage(widthInPx, parentWidth),\n    dataItem: appointment.dataItem,\n    fromPrev: appointment.fromPrev,\n    toNext: appointment.toNext,\n    type: VERTICAL_TYPE,\n  };\n};\n\nexport const calculateRectByDateIntervals: CalculateRectByDateIntervalsFn = (\n  type, intervals, rectByDates, rectByDatesMeta,\n) => {\n  const { growDirection, multiline } = type;\n  const sorted = sortAppointments(intervals, multiline);\n  const grouped = findOverlappedAppointments(sorted as AppointmentMoment[], multiline);\n\n  const rectCalculator = growDirection === HORIZONTAL_TYPE\n    ? horizontalRectCalculator\n    : verticalRectCalculator;\n\n  return unwrapGroups(adjustAppointments(grouped, multiline))\n    .map(appointment => rectCalculator(appointment, { rectByDates, multiline, rectByDatesMeta }));\n};\n\nconst expandRecurrenceAppointment = (\n  appointment: AppointmentMoment, leftBound: Date, rightBound: Date,\n) => {\n  const rightBoundUTC = new Date(getUTCDate(rightBound));\n  const leftBoundUTC = new Date(getUTCDate(leftBound));\n  const appointmentStartDate = moment(appointment.start).toDate();\n  const options = {\n    ...RRule.parseString(appointment.rRule),\n    dtstart: new Date(getUTCDate(appointmentStartDate)),\n  };\n  const correctedOptions = options.until\n    ? { ...options, until: new Date(getUTCDate(options.until)) }\n    : options;\n\n  const rruleSet = new RRuleSet();\n\n  if (appointment.exDate) {\n    appointment.exDate.split(',').reduce((acc: Date[], date: string) => {\n      const currentExDate = moment(date).toDate();\n      rruleSet.exdate(new Date(getUTCDate(currentExDate)));\n    }, []);\n  }\n\n  rruleSet.rrule(new RRule(correctedOptions));\n\n  // According to https://github.com/jakubroztocil/rrule#important-use-utc-dates\n  // we have to format the dates we get from RRuleSet to get local dates\n  const datesInBoundaries = rruleSet.between(leftBoundUTC as Date, rightBoundUTC as Date, true)\n    .map(date => moment.utc(date).format('YYYY-MM-DD HH:mm'));\n  if (datesInBoundaries.length === 0) return [];\n\n  const appointmentDuration = moment(appointment.end)\n    .diff(appointment.start, 'minutes');\n\n  return datesInBoundaries.map((startDate, index) => ({\n    ...appointment,\n    dataItem: {\n      ...appointment.dataItem,\n      startDate: moment(startDate).toDate(),\n      endDate: moment(startDate).add(appointmentDuration, 'minutes').toDate(),\n      parentData: appointment.dataItem,\n    },\n    start: moment(startDate),\n    end: moment(startDate).add(appointmentDuration, 'minutes'),\n  }));\n};\n\nexport const filterByViewBoundaries: PureComputed<\n  [AppointmentMoment, Date, Date, number[], boolean], AppointmentMoment[]\n> = (appointment, leftBound, rightBound, excludedDays, removeAllDay) => {\n  let appointments = [appointment];\n  if (appointment.rRule) {\n    appointments = expandRecurrenceAppointment(\n      appointment as AppointmentMoment, leftBound as Date, rightBound as Date,\n    );\n  }\n  return appointments.filter(appt => viewPredicate(\n    appt, leftBound, rightBound, excludedDays, removeAllDay,\n  ));\n};\n\nconst getUTCDate: PureComputed<[Date], number> = date =>\n  Date.UTC(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n);\n","import moment from 'moment';\nimport { PureComputed } from '@devexpress/dx-core';\nimport {\n  TimeScale, SchedulerDateTime, ViewCell,\n  DayScaleFn, TimeScaleFn, ViewCellsDataFn, AllDayCell,\n  SchedulerView,\n} from '../../types';\nimport { calculateFirstDateOfWeek } from '../../utils';\n\nconst subtractSecond: PureComputed<\n  [Date]\n> = date => moment(date as Date).subtract(1, 'second').toDate();\n\nexport const dayScale: DayScaleFn = (\n  currentDate,\n  firstDayOfWeek,\n  dayCount,\n  excluded = [],\n) => {\n  const result: Date[] = [];\n  const date = firstDayOfWeek !== undefined\n    ? moment(calculateFirstDateOfWeek(currentDate, firstDayOfWeek, excluded) as Date)\n    : moment(currentDate as Date);\n  for (let index = 0; index < dayCount; index += 1) {\n    if (excluded.findIndex(item => item === date.day()) === -1) {\n      result.push(date.toDate());\n    }\n    date.add(1, 'days');\n  }\n  return result;\n};\n\nexport const timeScale: TimeScaleFn = (\n  currentDate,\n  firstDayOfWeek,\n  startDayHour,\n  endDayHour,\n  cellDuration,\n  excludedDays,\n) => {\n  const result: TimeScale[] = [];\n  const startDateOfView = firstDayOfWeek !== undefined\n    ? calculateFirstDateOfWeek(currentDate, firstDayOfWeek, excludedDays)\n    : currentDate;\n  const left = moment(startDateOfView as Date).startOf('hour').hour(startDayHour);\n  const right = moment(startDateOfView as Date).startOf('hour').hour(endDayHour);\n\n  while (left.isBefore(right)) {\n    const startDate = left.toDate();\n    left.add(cellDuration, 'minutes');\n    result.push({ start: startDate, end: left.toDate() });\n  }\n  result[result.length - 1].end = subtractSecond(result[result.length - 1].end) as Date;\n  return result;\n};\n\nexport const availableViews: PureComputed<\n  [SchedulerView[], string, string], SchedulerView[]\n> = (views, viewName, viewDisplayName) => {\n  if (!views) return [{ name: viewName, displayName: viewDisplayName }];\n  if (views.findIndex(view => viewName === view.name) === -1) {\n    const nextViews = views.slice();\n    nextViews.push({ name: viewName, displayName: viewDisplayName });\n    return nextViews;\n  }\n  return views;\n};\n\nexport const viewCellsData: ViewCellsDataFn = (\n  currentDate, firstDayOfWeek,\n  dayCount, excludedDays,\n  startDayHour, endDayHour,\n  cellDuration, currTime,\n) => {\n  const days = dayScale(currentDate, firstDayOfWeek!, dayCount!, excludedDays);\n  const times = timeScale(\n    currentDate, firstDayOfWeek!, startDayHour, endDayHour, cellDuration, excludedDays,\n  );\n  const currentTime = moment(currTime as SchedulerDateTime);\n\n  return times.reduce((cellsAcc, time) => {\n    const start = moment(time.start);\n    const end = moment(time.end);\n    const rowCells = days.reduce((rowAcc, day) => {\n      const startDate = moment(day).hours(start.hours()).minutes(start.minutes()).toDate();\n      const endDate = moment(day).hours(end.hours()).minutes(end.minutes()).toDate();\n      const today = currentTime.isSame(startDate, 'day');\n      rowAcc.push({ startDate, endDate, today });\n      return rowAcc;\n    }, [] as ViewCell[]);\n    cellsAcc.push(rowCells);\n    return cellsAcc;\n  }, [] as ViewCell[][]);\n};\n\nexport const allDayCells: PureComputed<\n  [ViewCell[][]], AllDayCell[]\n> = viewCells => viewCells[0].map(cell => ({\n  startDate: moment(cell.startDate).startOf('day').toDate(),\n  endDate: moment(cell.startDate).add(1, 'day').startOf('day').toDate(),\n}));\n\nexport const startViewDate: PureComputed<\n  [ViewCell[][]], Date\n> = viewCells => moment(viewCells[0][0].startDate).toDate();\n\nexport const endViewDate: PureComputed<\n  [ViewCell[][]], Date\n> = (viewCells) => {\n  const lastRowIndex = viewCells.length - 1;\n  const lastCellIndex = viewCells[lastRowIndex].length - 1;\n  return subtractSecond(viewCells[lastRowIndex][lastCellIndex].endDate!);\n};\n","import { PureComputed } from '@devexpress/dx-core';\nimport { VERTICAL_TYPE, HORIZONTAL_TYPE } from '../../constants';\n\nconst MONTH_TYPE = 'month';\n\nexport const getViewType: PureComputed<[string], string> = (currentViewType) => {\n  if (currentViewType === MONTH_TYPE) return HORIZONTAL_TYPE;\n  return VERTICAL_TYPE;\n};\n","import moment from 'moment';\nimport { PureComputed } from '@devexpress/dx-core';\nimport {\n  AppointmentMoment, DayBoundaryPredicateFn, ReduceAppointmentByDayBoundsFn,\n} from '../../types';\n\nexport const sliceAppointmentByDay: PureComputed<\n  [AppointmentMoment], AppointmentMoment[]\n> = (appointment) => {\n  const { start, end, dataItem } = appointment;\n  if (start.isSame(end, 'day')) {\n    return [appointment];\n  }\n  return [\n    { start, end: moment(start).endOf('day'), dataItem },\n    { start: moment(end).startOf('day'), end, dataItem },\n  ];\n};\n\nexport const dayBoundaryPredicate: DayBoundaryPredicateFn = (\n  appointment,\n  leftBound, rightBound,\n  excludedDays = [],\n) => {\n  const dayStart = moment(leftBound as Date);\n  const dayEnd = moment(rightBound as Date);\n  const startDayTime = moment(appointment.start)\n    .hour(dayStart.hour())\n    .minutes(dayStart.minutes());\n  const endDayTime = moment(appointment.start)\n    .hour(dayEnd.hour())\n    .minutes(dayEnd.minutes());\n\n  if (appointment.end.isBefore(dayStart) || appointment.start.isAfter(dayEnd)) return false;\n  if (excludedDays.findIndex(day => day === moment(appointment.start).day()) !== -1) return false;\n  return (appointment.end.isAfter(startDayTime)\n    && appointment.start.isBefore(endDayTime));\n};\n\nexport const reduceAppointmentByDayBounds: ReduceAppointmentByDayBoundsFn = (\n  appointment, leftBound, rightBound,\n) => {\n  const dayStart = moment(leftBound as Date);\n  const dayEnd = moment(rightBound as Date);\n  const startDayTime = moment(appointment.start)\n    .hour(dayStart.hour())\n    .minutes(dayStart.minutes())\n    .seconds(dayStart.seconds());\n  const endDayTime = moment(appointment.start)\n    .hour(dayEnd.hour())\n    .minutes(dayEnd.minutes())\n    .seconds(dayEnd.seconds());\n\n  return {\n    ...appointment,\n    ...(appointment.start.isSameOrBefore(startDayTime) ? { start: startDayTime } : null),\n    ...(appointment.end.isSameOrAfter(endDayTime) ? { end: endDayTime } : null),\n  };\n};\n","import moment from 'moment';\nimport { CalculateWeekDateIntervalsFn, AppointmentMoment } from '../../types';\nimport {\n  sliceAppointmentByDay, dayBoundaryPredicate, reduceAppointmentByDayBounds,\n} from './helpers';\nimport { filterByViewBoundaries } from '../../utils';\n\nexport const calculateWeekDateIntervals: CalculateWeekDateIntervalsFn = (\n  appointments,\n  leftBound, rightBound,\n  excludedDays,\n) => appointments\n  .map(({ start, end, ...restArgs }) => ({ start: moment(start), end: moment(end), ...restArgs }))\n  .reduce((acc, appointment) =>\n    [...acc, ...filterByViewBoundaries(appointment, leftBound, rightBound, excludedDays, true)],\n    [] as AppointmentMoment[],\n  )\n  .reduce((acc, appointment) => (\n    [...acc, ...sliceAppointmentByDay(appointment)]), [] as AppointmentMoment[],\n  )\n  .filter(appointment => dayBoundaryPredicate(appointment, leftBound, rightBound, excludedDays))\n  .map(appointment => reduceAppointmentByDayBounds(appointment, leftBound, rightBound));\n","import moment from 'moment';\nimport {\n  GetCellByDateFn, GetVerticalRectByDatesFn, GetCellRectVerticalFn, SchedulerDateTime,\n} from '../../types';\n\nconst CELL_GAP_PX = 10;\nconst CELL_BOUND_HORIZONTAL_OFFSET_PX = 1;\nconst CELL_BOUND_VERTICAL_OFFSET_PX = 4;\n\nexport const getCellByDate: GetCellByDateFn = (viewCellsData, date, takePrev = false) => {\n  const cellIndex =\n    viewCellsData[0].findIndex(timeCell => moment(date as SchedulerDateTime)\n      .isSame(timeCell.startDate, 'date'));\n\n  const rowIndex = viewCellsData.findIndex(timeCell => moment(date as SchedulerDateTime)\n    .isBetween(\n      timeCell[cellIndex].startDate,\n      timeCell[cellIndex].endDate,\n      'seconds',\n      takePrev ? '(]' : '[)'),\n    );\n\n  const totalCellIndex = (rowIndex * viewCellsData[0].length) + cellIndex;\n  return {\n    index: totalCellIndex,\n    startDate: viewCellsData[rowIndex][cellIndex].startDate,\n  };\n};\n\nconst getCellRect: GetCellRectVerticalFn = (\n  date, viewCellsData, cellDuration, cellElementsMeta, takePrev,\n) => {\n  const {\n    index: cellIndex,\n    startDate: cellStartDate,\n  } = getCellByDate(viewCellsData, date, takePrev);\n\n  const {\n    top,\n    left,\n    width,\n    height: cellHeight,\n  } = cellElementsMeta.getCellRects[cellIndex]();\n\n  const timeOffset = moment(date as SchedulerDateTime).diff(cellStartDate as Date, 'minutes');\n  const topOffset = cellHeight * (timeOffset / cellDuration);\n  const parentRect = cellElementsMeta.parentRect();\n\n  return {\n    top,\n    left,\n    width,\n    topOffset,\n    parentRect,\n  };\n};\n\nexport const getVerticalRectByDates: GetVerticalRectByDatesFn = (\n  startDate,\n  endDate,\n  {\n    viewCellsData,\n    cellDuration,\n    cellElementsMeta,\n  },\n) => {\n  const firstCellRect = getCellRect(\n    startDate, viewCellsData, cellDuration, cellElementsMeta, false,\n  );\n  const lastCellRect = getCellRect(endDate, viewCellsData, cellDuration, cellElementsMeta, true);\n\n  const top = firstCellRect.top + firstCellRect.topOffset;\n  const height = (lastCellRect.top + lastCellRect.topOffset) - top;\n\n  return {\n    width: firstCellRect.width - CELL_GAP_PX - CELL_BOUND_HORIZONTAL_OFFSET_PX,\n    top: top - firstCellRect.parentRect.top + CELL_BOUND_HORIZONTAL_OFFSET_PX,\n    left: firstCellRect.left - firstCellRect.parentRect.left + CELL_BOUND_HORIZONTAL_OFFSET_PX,\n    parentWidth: firstCellRect.parentRect.width,\n    height: height - CELL_BOUND_VERTICAL_OFFSET_PX,\n  };\n};\n","import moment from 'moment';\nimport { PureComputed } from '@devexpress/dx-core';\nimport {\n  AppointmentMoment, GetAllDayCellIndexByDateFn,\n  SliceAppointmentsByBoundariesFn, SchedulerDateTime,\n} from '../../types';\n\nexport const allDayPredicate: PureComputed<[AppointmentMoment], boolean> = appointment => (\n  appointment.end.diff(appointment.start, 'hours') > 23\n  || !!appointment.allDay\n);\n\nexport const getAllDayCellIndexByDate: GetAllDayCellIndexByDateFn = (\n  viewCellsData, date, takePrev,\n) => {\n  const currentDate = moment(date as SchedulerDateTime);\n  let cellIndex = viewCellsData[0]\n    .findIndex(day => moment(day.startDate).day() === currentDate.day());\n  if (takePrev && currentDate.format() === currentDate.startOf('day').format()) {\n    cellIndex -= 1;\n  }\n  return cellIndex;\n};\n\nexport const sliceAppointmentsByBoundaries: SliceAppointmentsByBoundariesFn = (\n  appointment, left, right, excludedDays = [],\n) => {\n  const startDate = appointment.start.clone();\n  const endDate = appointment.end.clone();\n  let nextStart = startDate.clone();\n  let nextEnd = endDate.clone();\n\n  if (startDate.isBefore(left as Date)) {\n    nextStart = moment(left as Date);\n    nextStart.startOf('day');\n  }\n  if (endDate.isAfter(right as Date)) {\n    nextEnd = moment(right as Date);\n    nextEnd.endOf('day');\n  }\n  if (excludedDays.findIndex(day => day === startDate.day()) !== -1) {\n    while (excludedDays.findIndex(day => day === nextStart.day()) !== -1\n      && nextStart.isSameOrBefore(endDate, 'day')) {\n      nextStart.add(1, 'days').startOf('day');\n    }\n  }\n  if (excludedDays.findIndex(day => day === endDate.day()) !== -1) {\n    while (excludedDays.findIndex(day => day === nextEnd.day()) !== -1\n      && nextStart.isSameOrAfter(startDate, 'day')) {\n      nextEnd.add(-1, 'days').endOf('day');\n    }\n  }\n  return [{ ...appointment, start: nextStart, end: nextEnd }];\n};\n","import moment from 'moment';\nimport {\n  SliceAppointmentByWeekFn, GetMonthCellIndexByDateFn, SchedulerDateTime, AppointmentMoment,\n} from '../../types';\n\nexport const sliceAppointmentByWeek: SliceAppointmentByWeekFn = (timeBounds, appointment, step) => {\n  const { left, right } = timeBounds;\n  const pieces: AppointmentMoment[] = [];\n  const { start, end, ...restFields } = appointment;\n  let apptStart = start;\n  let apptEnd = end;\n  if (apptStart.isBefore(left)) apptStart = left.clone();\n  if (apptEnd.isAfter(right)) apptEnd = right.clone();\n  let pieceFrom = apptStart.clone();\n  let pieceTo = apptStart.clone();\n  let i = 0;\n  while (pieceTo.isBefore(apptEnd)) {\n    const currentRightBound = left.clone().add(step * i, 'days').subtract(1, 'second');\n    if (currentRightBound.isAfter(apptStart)) {\n      pieceTo = apptStart.clone().add(step * i, 'days');\n      if (pieceTo.isAfter(currentRightBound)) {\n        pieceTo = currentRightBound.clone();\n      }\n      if (pieceTo.isAfter(apptEnd)) {\n        pieceTo = apptEnd.clone();\n      }\n      if (!pieceFrom.isSameOrAfter(pieceTo)) {\n        pieces.push({ start: pieceFrom, end: pieceTo, ...restFields });\n        pieceFrom = pieceTo.clone().add(1, 'second');\n      }\n    }\n    i += 1;\n  }\n  return pieces;\n};\n\nexport const getMonthCellIndexByDate: GetMonthCellIndexByDateFn = (\n  viewCellsData, date, takePrev = false,\n) => {\n  const startViewDate = moment(viewCellsData[0][0].startDate);\n  const currentDate = moment(date as SchedulerDateTime);\n  let cellIndex = currentDate.diff(startViewDate, 'days');\n\n  if (takePrev && currentDate.format() === currentDate.startOf('day').format()) {\n    cellIndex -= 1;\n  }\n\n  return cellIndex;\n};\n","import { GetCellRectHorizontalFn, GetHorizontalRectByDatesFn } from '../../types';\nimport { getAllDayCellIndexByDate } from '../all-day-panel/helpers';\nimport { getMonthCellIndexByDate } from '../month-view/helpers';\n\nconst TOP_CELL_OFFSET = 0.32;\nconst CELL_BOUND_OFFSET_PX = 1;\n\nconst getCellRect: GetCellRectHorizontalFn = (\n  date, viewCellsData, cellElementsMeta, takePrev, multiline,\n) => {\n  const cellIndex = multiline\n    ? getMonthCellIndexByDate(viewCellsData, date, takePrev)\n    : getAllDayCellIndexByDate(viewCellsData, date, takePrev);\n\n  const {\n    top,\n    left,\n    width,\n    height,\n  } = cellElementsMeta.getCellRects[cellIndex]();\n  const parentRect = cellElementsMeta.parentRect();\n  return {\n    top,\n    left,\n    width,\n    height,\n    parentRect,\n  };\n};\n\nexport const getHorizontalRectByDates: GetHorizontalRectByDatesFn = (\n  startDate,\n  endDate,\n  {\n    multiline,\n    viewCellsData,\n    cellElementsMeta,\n  },\n) => {\n  const firstCellRect = getCellRect(startDate, viewCellsData, cellElementsMeta, false, multiline);\n  const lastCellRect = getCellRect(endDate, viewCellsData, cellElementsMeta, true, multiline);\n\n  const top = firstCellRect.top + (firstCellRect.height * TOP_CELL_OFFSET);\n  const height = firstCellRect.height - (firstCellRect.height * TOP_CELL_OFFSET);\n\n  return {\n    top: top - firstCellRect.parentRect.top,\n    left: (firstCellRect.left - firstCellRect.parentRect.left) + CELL_BOUND_OFFSET_PX,\n    width: ((lastCellRect.left - firstCellRect.left) + firstCellRect.width) - CELL_BOUND_OFFSET_PX,\n    height,\n    parentWidth: firstCellRect.parentRect.width,\n  };\n};\n","import moment from 'moment';\nimport {\n  MonthCellsDataComputedFn, MonthCellData,\n  CalculateMonthDateIntervalsFn, AppointmentMoment,\n} from '../../types';\nimport { filterByViewBoundaries } from '../../utils';\nimport { sliceAppointmentByWeek } from './helpers';\n\nconst DAY_COUNT = 7;\nconst MONTH_LENGTH = 31;\n\nexport const monthCellsData: MonthCellsDataComputedFn = (\n  currentDate,\n  firstDayOfWeek,\n  intervalCount = 1,\n  today,\n) => {\n  const targetDate = moment(currentDate as Date);\n  const currentMonths = [targetDate.month()];\n  while (currentMonths.length < intervalCount) {\n    currentMonths.push(targetDate.add(1, 'months').month());\n  }\n  const firstMonthDate = moment(currentDate as Date).date(1);\n  const firstMonthDay = firstMonthDate.day() - firstDayOfWeek;\n  const prevMonthDayCount = firstMonthDate.day(firstMonthDay).day() || DAY_COUNT;\n  const prevMonth = moment(currentDate as Date).subtract(1, 'months');\n  const prevMonthStartDay = prevMonth.daysInMonth() - (prevMonthDayCount - 1);\n  const from = moment()\n    .year(prevMonth.year())\n    .month(prevMonth.month())\n    .date(prevMonthStartDay)\n    .startOf('day');\n\n  const result: MonthCellData[][] = [];\n  while (result.length < (Math.trunc((MONTH_LENGTH * intervalCount) / DAY_COUNT) + 2)) {\n    const week: MonthCellData[] = [];\n    while (week.length < DAY_COUNT) {\n      week.push({\n        startDate: from.toDate(),\n        endDate: from.clone().add(1, 'day').toDate(),\n        otherMonth: currentMonths.findIndex(month => month === from.month()) === -1,\n        today: today ? moment(today as Date).isSame(from, 'date') : false,\n      });\n      from.add(1, 'day');\n    }\n    result.push(week);\n  }\n  return result;\n};\n\nexport const calculateMonthDateIntervals: CalculateMonthDateIntervalsFn = (\n  appointments, leftBound, rightBound,\n) => appointments\n  .map(({ start, end, ...restArgs }) => ({ start: moment(start), end: moment(end), ...restArgs }))\n  .reduce((acc, appointment) =>\n    [...acc, ...filterByViewBoundaries(appointment, leftBound, rightBound, [], false)],\n    [] as AppointmentMoment[],\n  )\n  .reduce((acc, appointment) => ([\n    ...acc,\n    ...sliceAppointmentByWeek(\n      { left: moment(leftBound as Date), right: moment(rightBound as Date) },\n      appointment,\n      DAY_COUNT,\n    ),\n  ]), [] as AppointmentMoment[]);\n","import moment from 'moment';\nimport {\n  AppointmentMoment, CalculateAllDayDateIntervalsFn,\n} from '../../types';\nimport { allDayPredicate, sliceAppointmentsByBoundaries } from './helpers';\nimport { filterByViewBoundaries } from '../../utils';\n\nexport const calculateAllDayDateIntervals: CalculateAllDayDateIntervalsFn = (\n  appointments,\n  leftBound, rightBound,\n  excludedDays,\n) => appointments\n  .map(({ start, end, ...restArgs }) => ({ start: moment(start), end: moment(end), ...restArgs }))\n  .reduce((acc, appointment) =>\n    [...acc, ...filterByViewBoundaries(appointment, leftBound, rightBound, excludedDays, false)],\n    [] as AppointmentMoment[],\n  )\n  .filter(appointment => allDayPredicate(appointment))\n  .reduce((acc, appointment) => ([\n    ...acc,\n    ...sliceAppointmentsByBoundaries(appointment, leftBound, rightBound, excludedDays),\n  ]), [] as AppointmentMoment[]);\n","import {\n  AllDayRects, VerticalRects, HorizontalRects,\n} from '../../types';\nimport {\n  VERTICAL_TYPE, HORIZONTAL_TYPE,\n} from '../../constants';\nimport { calculateRectByDateIntervals } from '../../utils';\nimport { calculateWeekDateIntervals } from '../week-view/computeds';\nimport { getVerticalRectByDates } from '../vertical-rect/helpers';\nimport { getHorizontalRectByDates } from '../horizontal-rect/helpers';\nimport { calculateMonthDateIntervals } from '../month-view/computeds';\nimport { calculateAllDayDateIntervals } from '../all-day-panel/computeds';\n\nexport const allDayRects: AllDayRects = (\n  appointments, startViewDate, endViewDate,\n  excludedDays, viewCellsData, cellElementsMeta,\n) => {\n  const intervals = calculateAllDayDateIntervals(\n    appointments, startViewDate, endViewDate, excludedDays,\n  );\n  return calculateRectByDateIntervals(\n    {\n      growDirection: HORIZONTAL_TYPE,\n      multiline: false,\n    },\n    intervals,\n    getHorizontalRectByDates,\n    {\n      startViewDate,\n      endViewDate,\n      viewCellsData,\n      cellElementsMeta,\n      excludedDays,\n    },\n  );\n};\n\nexport const verticalTimeTableRects: VerticalRects = (\n  appointments, startViewDate, endViewDate, excludedDays,\n  viewCellsData, cellDuration, cellElementsMeta,\n) => {\n  const intervals = calculateWeekDateIntervals(\n    appointments, startViewDate, endViewDate, excludedDays,\n  );\n  return calculateRectByDateIntervals(\n    {\n      growDirection: VERTICAL_TYPE,\n      multiline: false,\n    },\n    intervals,\n    getVerticalRectByDates,\n    {\n      startViewDate,\n      endViewDate,\n      viewCellsData,\n      cellDuration,\n      cellElementsMeta,\n    },\n  );\n};\n\nexport const horizontalTimeTableRects: HorizontalRects = (\n  appointments, startViewDate, endViewDate,\n  viewCellsData, cellElementsMeta,\n) => {\n  const intervals = calculateMonthDateIntervals(\n    appointments, startViewDate, endViewDate,\n  );\n  return calculateRectByDateIntervals(\n    {\n      growDirection: HORIZONTAL_TYPE,\n      multiline: true,\n    },\n    intervals,\n    getHorizontalRectByDates,\n    {\n      startViewDate,\n      endViewDate,\n      viewCellsData,\n      cellElementsMeta,\n    },\n  );\n};\n","import { DateTimeFormatInstanceFn } from '../../types';\n\nexport const dateTimeFormatInstance: DateTimeFormatInstanceFn = (\n  locale, formatOptions,\n) => new Intl.DateTimeFormat(locale, formatOptions);\n","import { PureComputed } from '@devexpress/dx-core';\nimport { AppointmentModel, Appointment, FormatDateTimeGetterFn, FormatterFn } from '../../types';\nimport { dateTimeFormatInstance } from './helpers';\n\nexport const appointments: PureComputed<\n  [AppointmentModel[]], Appointment[]\n> = data => data.map(appointment => ({\n  start: appointment.startDate,\n  end: appointment.endDate,\n  ...appointment.allDay !== undefined && {\n    allDay: appointment.allDay,\n  },\n  ...appointment.rRule !== undefined && {\n    rRule: appointment.rRule,\n  },\n  ...appointment.exDate !== undefined && {\n    exDate: appointment.exDate,\n  },\n  dataItem: appointment,\n}));\n\nexport const formatDateTimeGetter: FormatDateTimeGetterFn = (locale) => {\n  const cache = new Map<Intl.DateTimeFormatOptions, Intl.DateTimeFormat>(); // any -> type\n\n  const formatter: FormatterFn = (nextDate, nextOptions) => {\n    if (nextDate === undefined) return '';\n    const date = new Date(nextDate);\n    let formatInstance = cache.get(nextOptions);\n\n    if (!formatInstance) {\n      formatInstance = dateTimeFormatInstance(locale, nextOptions);\n      cache.set(nextOptions, formatInstance);\n    }\n\n    return formatInstance.format(date);\n  };\n  return formatter;\n};\n","import moment from 'moment';\nimport { PureReducer } from '@devexpress/dx-core';\nimport { ChangeCurrentDatePayload } from '../../types';\n\nexport const changeCurrentDate: PureReducer<Date, ChangeCurrentDatePayload> = (\n  currentDate, {\n  nextDate, step, amount, direction,\n}) => (\n  nextDate\n  || moment(currentDate as Date)[direction === 'back' ? 'subtract' : 'add'](amount, step)\n    .toDate()\n  || moment().subtract(amount, step)\n);\n\nexport const setCurrentViewName: PureReducer<\n  string, string, string\n> = (currentViewName, nextViewName) => nextViewName;\n","import moment from 'moment';\nimport { PureComputed } from '@devexpress/dx-core';\nimport { ViewBoundTextFn, FormatterFn } from '../../types';\nimport {\n  DAY_OPTIONS,\n  SHORT_MONTH_OPTIONS,\n  DAY_SHORT_MONTH_OPTIONS,\n  SHORT_MONTH_LONG_YEAR_OPTIONS,\n  SHORT_MONTH_SHORT_YEAR_OPTIONS,\n  MONTH_YEAR_OPTIONS,\n  DAY_LONG_MONTH_LONG_YEAR_OPTIONS,\n  DAY_SHORT_MONTH_SHORT_YEAR_OPTIONS,\n  DAY_SHORT_MONTH_LONG_YEAR_OPTIONS,\n} from '../../constants';\n\nconst calculateTextByDays: PureComputed<\n  [Date, Date, FormatterFn], string\n> = (startViewDate, endViewDate, formatDate) => {\n  const momentStartViewDate = moment(startViewDate as Date);\n  const momentEndViewDate = moment(endViewDate as Date);\n\n  if (momentStartViewDate.isSame(momentEndViewDate, 'day')) {\n    return formatDate(momentStartViewDate.toDate(), DAY_LONG_MONTH_LONG_YEAR_OPTIONS);\n  }\n  if (momentStartViewDate.isSame(momentEndViewDate, 'year')) {\n    if (momentStartViewDate.isSame(momentEndViewDate, 'month')) {\n      return `${\n        formatDate(momentStartViewDate.toDate(), DAY_OPTIONS)\n      }-${\n        formatDate(momentEndViewDate.toDate(), DAY_OPTIONS)\n      } ${\n        formatDate(momentEndViewDate.toDate(), MONTH_YEAR_OPTIONS)\n      }`;\n    }\n    return `${\n      formatDate(momentStartViewDate.toDate(), DAY_SHORT_MONTH_OPTIONS)\n    } - ${\n      formatDate(momentEndViewDate.toDate(), DAY_SHORT_MONTH_LONG_YEAR_OPTIONS)\n    }`;\n  }\n  return `${\n    formatDate(momentStartViewDate.toDate(), DAY_SHORT_MONTH_SHORT_YEAR_OPTIONS)\n  } - ${\n    formatDate(momentEndViewDate.toDate(), DAY_SHORT_MONTH_SHORT_YEAR_OPTIONS)\n  }`;\n};\n\nconst calculateTextByMonths: PureComputed<\n  [Date, number, FormatterFn], string\n> = (currentDate, intervalCount, formatDate) => {\n  const momentCurrentDate = moment(currentDate as Date);\n\n  if (intervalCount === 1) {\n    return formatDate(momentCurrentDate.toDate(), MONTH_YEAR_OPTIONS);\n  }\n  const lastMonth = momentCurrentDate.clone().add(intervalCount - 1, 'month');\n  if (momentCurrentDate.isSame(lastMonth, 'year')) {\n    return `${\n      formatDate(momentCurrentDate.toDate(), SHORT_MONTH_OPTIONS)\n    }-${\n      formatDate(lastMonth.toDate(), SHORT_MONTH_LONG_YEAR_OPTIONS)\n    }`;\n  }\n  return `${\n    formatDate(momentCurrentDate.toDate(), SHORT_MONTH_SHORT_YEAR_OPTIONS)\n  } - ${\n    formatDate(lastMonth.toDate(), SHORT_MONTH_SHORT_YEAR_OPTIONS)\n  }`;\n};\n\nexport const viewBoundText: ViewBoundTextFn = (\n  startViewDate, endViewDate, step, currentDate, intervalCount, formatDate,\n) => (\n  step !== 'month'\n    ? calculateTextByDays(startViewDate, endViewDate, formatDate)\n    : calculateTextByMonths(currentDate, intervalCount, formatDate)\n);\n","import { PureReducer } from '@devexpress/dx-core';\nimport { AppointmentMeta } from '../../types';\n\nexport const setAppointmentMeta: PureReducer<AppointmentMeta, AppointmentMeta> = (\n  prevAppointmentMeta,\n  { target, data },\n) => ({ target, data });\n","export const OPEN_COMMAND_BUTTON = 'open';\nexport const CLOSE_COMMAND_BUTTON = 'close';\nexport const DELETE_COMMAND_BUTTON = 'delete';\nexport const CANCEL_COMMAND_BUTTON = 'cancel';\nexport const COMMIT_COMMAND_BUTTON = 'commit';\n","import { PureReducer } from '@devexpress/dx-core';\nimport { AppointmentModel, AppointmentDataPayload } from '../../types';\n\nexport const setAppointmentData: PureReducer<\n  AppointmentModel, AppointmentDataPayload\n> = (prevAppointmentData, { appointmentData }) => appointmentData;\n","import moment from 'moment';\nimport { PureComputed } from '@devexpress/dx-core';\nimport { Action, StartDate, EndDate } from '../../types';\n\nexport const callActionIfExists: PureComputed<[Action, object], void> = (action, payload) => {\n  if (action) {\n    action(payload);\n  }\n};\n\nexport const isAllDayCell: PureComputed<\n  [StartDate, EndDate], boolean\n> = (\n  startDate, endDate,\n) => moment(endDate as EndDate).diff(moment(startDate as StartDate), 'days') >= 1;\n","import { PureReducer } from '@devexpress/dx-core';\nimport {\n  AddedAppointmentDataPayload, AppointmentModel, Changes, EditAppointmentPayload,\n} from '../../types';\n\nexport const addAppointment: PureReducer<\n  AppointmentModel, AddedAppointmentDataPayload, AppointmentModel | {}\n> = (\n  addedAppointmentData, { appointmentData } = { appointmentData:  {} },\n) => appointmentData;\n\nexport const cancelAddedAppointment = () => ({});\n\nexport const startEditAppointment: PureReducer<\n  Partial<AppointmentModel>, EditAppointmentPayload\n> = (prevEditingAppointment, appointmentData) => appointmentData;\n\nexport const stopEditAppointment = () => undefined;\n\nexport const changeAppointment: PureReducer<\nAppointmentModel, Changes\n> = (\n  appointment, { change },\n) => ({ ...appointment, ...change });\n\nexport const cancelChanges = () => ({});\n","import { PureComputed } from '@devexpress/dx-core';\nimport { AppointmentId, AppointmentChanges, Changes } from '../../types';\n\nexport const changedAppointmentById: PureComputed<\n  [Changes, AppointmentId], AppointmentChanges\n> = (changes, appointmentId) => (\n  { [appointmentId]: changes }\n);\n","import moment from 'moment';\nimport { RRule, rrulestr, RRuleSet } from 'rrule';\nimport {\n  AppointmentModel, PreCommitChangesFn, Changes, MakeDateSequenceFn, EditFn, DeleteFn,\n} from '../../types';\nimport { RECURRENCE_EDIT_SCOPE } from '../../constants';\n\nconst mergeNewChanges = (\n  appointmentData: Partial<AppointmentModel>, changes: Changes,\n) => {\n  const appointment = {\n    ...appointmentData,\n  };\n  delete appointment.id;\n  delete appointment.rRule;\n  delete appointment.exDate;\n  delete appointment.parentData;\n  return { ...appointment, ...changes };\n};\n\nconst reduceExDate = (prevExDate: string, boundDate: Date) => {\n  if (prevExDate.length > 0) {\n    return prevExDate.split(',').reduce((acc: string[], date: string) => {\n      const momentDate = moment.utc(date);\n      if (momentDate.isBefore(boundDate)) {\n        return [...acc, date];\n      }\n      return acc;\n    }, []).join(',');\n  }\n  return undefined;\n};\n\nconst configureExDate = (exDate: string | undefined, date: Date) => {\n  const currentExDate = `${moment.utc(date).format('YYYYMMDDTHHmmss')}Z`;\n  return exDate\n    ? `${exDate},${currentExDate}`\n    : currentExDate;\n};\n\nconst configureDateSequence: MakeDateSequenceFn = (rRule, exDate, options) => {\n  let rruleSet = new RRuleSet();\n  if (exDate) {\n    rruleSet = rrulestr(`EXDATE:${exDate}`, { forceset: true }) as RRuleSet;\n  }\n  rruleSet.rrule(new RRule({\n    ...RRule.parseString(rRule as string),\n    ...options,\n  }));\n\n  return rruleSet.all();\n};\n\nconst configureICalendarRules = (rRule: string | undefined, options: object) => {\n  const rruleSet = new RRuleSet();\n  rruleSet.rrule(new RRule({\n    ...RRule.parseString(rRule as string),\n    ...options,\n  }));\n  return rruleSet.valueOf();\n};\n\nexport const deleteCurrent: DeleteFn = (appointmentData) => {\n  const currentSequence: Date[] = configureDateSequence(\n    appointmentData.rRule,\n    appointmentData.exDate,\n    { dtstart: moment.utc(appointmentData.parentData.startDate).toDate() },\n  );\n\n  if (currentSequence.length === 1) {\n    return deleteAll(appointmentData);\n  }\n\n  const nextExDate = configureExDate(appointmentData.exDate, appointmentData.startDate as Date);\n  return { changed: { [appointmentData.id!]: { exDate: nextExDate } } };\n};\n\nexport const deleteAll: DeleteFn = (appointmentData) => {\n  return { deleted: appointmentData.id };\n};\n\nexport const deleteCurrentAndFollowing: DeleteFn = (appointmentData) => {\n  const { rRule, startDate, parentData, exDate: prevExDate = '', id } = appointmentData;\n\n  const initialSequence: Date[] = configureDateSequence(rRule, prevExDate, {\n    dtstart: moment.utc(parentData.startDate).toDate(),\n  });\n\n  const currentChildIndex = initialSequence\n    .findIndex(date => moment(date).isSame(startDate as Date));\n\n  if (initialSequence.length === 1 || currentChildIndex === 0) {\n    return deleteAll(appointmentData);\n  }\n\n  const changedRules = configureICalendarRules(rRule as string, {\n    dtstart: moment.utc(parentData.startDate).toDate(),\n    until: moment.utc(initialSequence[currentChildIndex - 1]).toDate(),\n    count: null,\n  });\n\n  const nextExDate = reduceExDate(prevExDate, startDate as Date);\n  return {\n    changed: {\n      [id!]: {\n        rRule: changedRules[1].slice(6),\n        ...nextExDate && prevExDate !== nextExDate ? { exDate: nextExDate } : {},\n      },\n    },\n  };\n};\n\nexport const editAll: EditFn = (changes, appointmentData) => {\n  const { rRule, id } = appointmentData;\n\n  const initialRule = new RRule(RRule.parseString(rRule as string));\n  if (moment.utc(changes.startDate as Date).isAfter(initialRule.options.until!)) {\n    return {\n      changed: {\n        [id!]: {\n          ...changes,\n          rRule: 'FREQ=DAILY;COUNT=1',\n          exDate: '',\n        },\n      },\n    };\n  }\n\n  return  { changed: {  [appointmentData.id!]: changes } };\n};\n\nexport const editCurrent: EditFn = (changes, appointmentData) => ({\n  changed: {\n    [appointmentData.id!]: {\n      exDate: configureExDate(appointmentData.exDate, appointmentData.startDate as Date),\n    },\n  },\n  added: mergeNewChanges(appointmentData as Partial<AppointmentModel>, changes as Changes),\n});\n\nexport const editCurrentAndFollowing: EditFn = (changes, appointmentData) => {\n  const { rRule, startDate, parentData, exDate: prevExDate = '', id } = appointmentData;\n\n  const initialRule = new RRule(RRule.parseString(rRule as string));\n\n  const initialSequence: Date[] = configureDateSequence(rRule, prevExDate, {\n    dtstart: moment.utc(parentData.startDate).toDate(),\n  });\n  const currentChildIndex = initialSequence\n    .findIndex(date => moment(date).isSame(startDate as Date));\n\n  if (currentChildIndex === 0) {\n    return editAll(changes, appointmentData);\n  }\n\n  const changedRules = configureICalendarRules(rRule as string, {\n    dtstart: moment.utc(parentData.startDate).toDate(),\n    until: moment.utc(initialSequence[currentChildIndex - 1]).toDate(),\n    count: null,\n  });\n\n  const addedRules = configureICalendarRules(rRule as string, {\n    dtstart: moment.utc(startDate as Date).toDate(),\n    count: initialSequence.length - currentChildIndex,\n  });\n\n  const nextExDate = reduceExDate(prevExDate, startDate as Date);\n\n  const addedAppointment = moment.utc(changes.startDate as Date).isAfter(initialRule.options.until!)\n    ? { rRule: 'FREQ=DAILY;COUNT=1', exDate: '' } : { rRule: addedRules[1].slice(6) };\n\n  return {\n    changed: {\n      [id!]: {\n        rRule: changedRules[1].slice(6),\n        ...nextExDate && prevExDate !== nextExDate ? { exDate: nextExDate } : {},\n      },\n    },\n    added: {\n      ...addedAppointment, ...mergeNewChanges(appointmentData, changes),\n    },\n  };\n};\n\nexport const preCommitChanges: PreCommitChangesFn = (\n  changes, appointmentData, editType,\n) => {\n  if (changes === null) {\n    switch (editType) {\n      case RECURRENCE_EDIT_SCOPE.ALL: {\n        return deleteAll(appointmentData);\n      }\n      case RECURRENCE_EDIT_SCOPE.CURRENT: {\n        return deleteCurrent(appointmentData);\n      }\n      case RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING: {\n        return deleteCurrentAndFollowing(appointmentData);\n      }\n    }\n  } else {\n    switch (editType) {\n      case RECURRENCE_EDIT_SCOPE.ALL: {\n        return editAll(changes, appointmentData);\n      }\n      case RECURRENCE_EDIT_SCOPE.CURRENT: {\n        return editCurrent(changes, appointmentData);\n      }\n      case RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING: {\n        return editCurrentAndFollowing(changes, appointmentData);\n      }\n    }\n  }\n  return {};\n};\n","import moment from 'moment';\nimport { PureComputed } from '@devexpress/dx-core';\nimport {\n  ViewCell, ClientOffset, TimeType, ScrollingStrategy,\n  AllDayCell, CalculateAppointmentTimeBoundaries,\n  TimeBoundariesByDrag, TimeBoundariesByResize, AppointmentModel,\n  CellElementsMeta,\n} from '../../types';\nimport { allDayCells as allDayCellsCore } from '../common/computeds';\nimport {\n  VERTICAL_TYPE, HORIZONTAL_TYPE, SCROLL_OFFSET, MINUTES,\n  SCROLL_SPEED_PX, SECONDS, RESIZE_TOP, RESIZE_BOTTOM, HOURS,\n} from '../../constants';\nimport {\n  allDayRects, horizontalTimeTableRects, verticalTimeTableRects,\n} from '../common/calculate-rects';\n\nconst clamp: PureComputed<\n  [number, number, number]\n> = (value, min, max) => Math.max(Math.min(value, max), min);\n\nconst calculateInsideOffset: PureComputed<\n  [string, number, number], number\n> = (targetType, insidePart, cellDurationMinutes) => targetType === VERTICAL_TYPE\n  ? insidePart * cellDurationMinutes * 60 / 2 : 0;\n\nexport const cellType: PureComputed<\n  [ViewCell | AllDayCell], string\n> = data => moment(data.startDate as Date)\n  .isSame(data.endDate as Date, 'day') ? VERTICAL_TYPE : HORIZONTAL_TYPE;\n\nexport const intervalDuration: PureComputed<\n  [ViewCell | AllDayCell, TimeType], number\n> = (data, type) => moment(data.endDate as Date).diff(data.startDate as Date, type);\n\nexport const cellIndex: PureComputed<\n  [Array<() => ClientRect>, ClientOffset], number\n> = (getCellRects, clientOffset) => getCellRects.findIndex((getCellRect) => {\n  const { left, top, right, bottom } = getCellRect();\n  const isOver = clientOffset\n      && clamp(clientOffset.x, left, right) === clientOffset.x\n      && clamp(clientOffset.y, top, bottom) === clientOffset.y;\n  return isOver;\n});\n\nexport const cellData: PureComputed<\n  [number, number, ViewCell[][]], ViewCell | AllDayCell\n> = (timeTableIndex, allDayIndex, viewCellsData) => {\n  if (allDayIndex !== -1) {\n    const allDayCellsData = allDayCellsCore(viewCellsData);\n    return allDayCellsData[allDayIndex];\n  }\n  const firstIndex = Math.floor(timeTableIndex / viewCellsData[0].length);\n  const secondIndex = timeTableIndex % viewCellsData[0].length;\n  return viewCellsData[firstIndex][secondIndex];\n};\n\nexport const autoScroll: PureComputed<\n  [ClientOffset, ScrollingStrategy], void\n> = (clientOffset, scrollingStrategy) => {\n  if ((clientOffset.y < scrollingStrategy.topBoundary + SCROLL_OFFSET)\n    && (clientOffset.y > scrollingStrategy.topBoundary)) {\n    scrollingStrategy.changeVerticalScroll(-SCROLL_SPEED_PX);\n  }\n  if (scrollingStrategy.bottomBoundary - SCROLL_OFFSET < clientOffset.y) {\n    scrollingStrategy.changeVerticalScroll(+SCROLL_SPEED_PX);\n  }\n};\n\nexport const timeBoundariesByResize: TimeBoundariesByResize = (\n  payload, targetData, targetType, cellDurationMinutes, insidePart,\n) => {\n  if (targetType !== payload.appointmentType) {\n    return { appointmentStartTime: undefined, appointmentEndTime: undefined };\n  }\n\n  let appointmentStartTime;\n  let appointmentEndTime;\n  const sourceType = payload.type;\n\n  if (sourceType === RESIZE_TOP) {\n    const insideTopOffset = calculateInsideOffset(targetType, insidePart, cellDurationMinutes);\n    appointmentStartTime = moment(targetData.startDate as Date)\n      .add(insideTopOffset, SECONDS).toDate();\n    appointmentEndTime = new Date(payload.endDate as Date);\n  }\n  if (sourceType === RESIZE_BOTTOM) {\n    const insideBottomOffset = insidePart === 0 && targetType === VERTICAL_TYPE\n      ? cellDurationMinutes * 60 / 2 : 0;\n    appointmentEndTime = moment(targetData.endDate as Date)\n      .add(-insideBottomOffset, SECONDS).toDate();\n    appointmentStartTime = new Date(payload.startDate as Date);\n  }\n  // keep origin appointment duration if coordinates are wrong\n  if (moment(appointmentEndTime).diff(appointmentStartTime, MINUTES) < 1) {\n    appointmentStartTime = new Date(payload.startDate as Date);\n    appointmentEndTime = new Date(payload.endDate as Date);\n  }\n  return { appointmentStartTime, appointmentEndTime };\n};\n\nexport const timeBoundariesByDrag: TimeBoundariesByDrag = (\n  payload, targetData, targetType,\n  cellDurationMinutes, insidePart, offsetTimeTopBase,\n) => {\n  if (targetType === HORIZONTAL_TYPE\n    && intervalDuration(payload, SECONDS) < intervalDuration(targetData, SECONDS)) {\n    return {\n      appointmentStartTime: targetData.startDate as Date,\n      appointmentEndTime: targetData.endDate as Date,\n      offsetTimeTop: 0,\n    };\n  }\n  let offsetTimeTop;\n  let appointmentStartTime;\n  let appointmentEndTime;\n\n  const insideOffset = calculateInsideOffset(targetType, insidePart, cellDurationMinutes);\n  const start = moment(targetData.startDate as Date).add(insideOffset, SECONDS);\n\n  if (offsetTimeTopBase === null) {\n    offsetTimeTop = moment(targetData.startDate as Date)\n      .diff(payload.startDate as Date, SECONDS) + insideOffset;\n  } else {\n    offsetTimeTop = offsetTimeTopBase;\n  }\n\n  if (payload.type === targetType) {\n    const appointmentDurationSeconds = intervalDuration(payload, SECONDS);\n    appointmentStartTime = moment(start).add((offsetTimeTop) * (-1), SECONDS).toDate();\n    appointmentEndTime = moment(start)\n      .add((appointmentDurationSeconds - offsetTimeTop), SECONDS).toDate();\n  } else {\n    appointmentStartTime = moment(targetData.startDate as Date)\n      .add(insideOffset, SECONDS).toDate();\n    appointmentEndTime = moment(targetData.endDate as Date).add(insideOffset, SECONDS).toDate();\n  }\n\n  return { appointmentStartTime, appointmentEndTime, offsetTimeTop };\n};\n\nexport const calculateAppointmentTimeBoundaries: CalculateAppointmentTimeBoundaries = (\n  payload, targetData, targetType,\n  cellDurationMinutes, insidePart, offsetTimeTopBase,\n) => {\n  const isDragging = (payload.type === VERTICAL_TYPE || payload.type === HORIZONTAL_TYPE);\n\n  return(isDragging\n    ? timeBoundariesByDrag(\n        payload, targetData as AppointmentModel, targetType,\n        cellDurationMinutes, insidePart, offsetTimeTopBase,\n      )\n    : timeBoundariesByResize(\n        payload, targetData as AppointmentModel, targetType, cellDurationMinutes, insidePart,\n      )\n  );\n};\n\nexport const calculateInsidePart: PureComputed<\n  [number, Array<() => ClientRect>, number]\n> = (top, timeTableCellsRects, timeTableIndex) => {\n  if (timeTableIndex !== undefined && timeTableIndex !== -1) {\n    const cellRect = timeTableCellsRects[timeTableIndex]();\n    return top > cellRect.top + cellRect.height / 2 ? 1 : 0;\n  }\n  return 0;\n};\n\nexport const calculateDraftAppointments = (\n  allDayIndex: number, draftAppointments: any, startViewDate: Date,\n  endViewDate: Date, excludedDays: number[], viewCellsData: any,\n  getAllDayCellsElementRects: CellElementsMeta,\n  targetType: string, cellDurationMinutes: number,\n  getTableCellElementRects: CellElementsMeta,\n) => {\n  if (allDayIndex !== -1 || (targetType === VERTICAL_TYPE\n    && getAllDayCellsElementRects.getCellRects.length\n    && intervalDuration(draftAppointments[0].dataItem, HOURS) > 23)) {\n    const allDayDrafts = draftAppointments.map((draftAppt: any) => ({\n      ...draftAppt,\n      allDay: true,\n    }));\n\n    return {\n      allDayDraftAppointments: allDayRects(\n        allDayDrafts, startViewDate, endViewDate,\n        excludedDays, viewCellsData, getAllDayCellsElementRects,\n      ),\n      timeTableDraftAppointments: [],\n    };\n  }\n\n  if (targetType === VERTICAL_TYPE || allDayIndex !== -1) {\n    return {\n      allDayDraftAppointments: [],\n      timeTableDraftAppointments: verticalTimeTableRects(\n        draftAppointments, startViewDate, endViewDate,\n        excludedDays, viewCellsData, cellDurationMinutes, getTableCellElementRects,\n      ),\n    };\n  }\n  return {\n    allDayDraftAppointments: [],\n    timeTableDraftAppointments: horizontalTimeTableRects(\n      draftAppointments, startViewDate, endViewDate,\n      viewCellsData, getTableCellElementRects,\n    ),\n  };\n};\n"],"names":["RRule","RRuleSet","getCellRect","rrulestr","allDayCellsCore"],"mappings":"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"}